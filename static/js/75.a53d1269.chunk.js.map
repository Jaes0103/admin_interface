{"version":3,"file":"static/js/75.a53d1269.chunk.js","mappings":"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","sources":["components/ConfirmationModal.js","components/MapViewPage.js","components/Sidebar.js"],"sourcesContent":["import React from 'react';\nimport '../style/ConfirmationModal.css'; \n\nconst ConfirmationModal = ({ isOpen, message, onConfirm, onCancel, title = \"Confirmation\", confirmText = \"Yes\", cancelText = \"No\" }) => {\n    if (!isOpen) return null; \n\n    return (\n        <div className=\"confirmation-modal\">\n            <div className=\"modal-content\">\n                <h2>{title}</h2>\n                <p>{message}</p>\n                <div className=\"modal-buttons\">\n                    <button onClick={onConfirm} className=\"confirm-button\">{confirmText}</button>\n                    <button onClick={onCancel} className=\"cancel-button\">{cancelText}</button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ConfirmationModal;\n","\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport '../style/MapPage.css';\nimport PetsIcon from '@mui/icons-material/Pets';\nimport { renderToString } from 'react-dom/server';\nimport Sidebar from './Sidebar';\n\nconst baseURL = process.env.REACT_APP_BASE_URL;\n\n// Function to create a custom marker icon\nconst createMarkerIcon = (color) => {\n    return L.divIcon({\n        className: 'custom-marker',\n        html: renderToString(\n            <div className=\"custom-marker-circle\" style={{ backgroundColor: color, borderRadius: '50%', padding: '5px' }}>\n                <PetsIcon style={{ color: 'white', fontSize: '20px' }} />\n            </div>\n        ),\n        iconSize: [30, 30],\n        iconAnchor: [15, 30],\n        popupAnchor: [0, -30],\n    });\n};\n\n// Define marker colors\nconst normalReportColor = '#8a7ebe'; \nconst falseReportColor = '#FFA500'; \nconst rescuedColor = '#32CD32'; \n\nconst MapView = () => {\n    const [reports, setReports] = useState([]);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const fetchReports = async () => {\n            try {\n                // Fetch all reports in one go (you can also create a single endpoint that returns all necessary data)\n                const response = await fetch(`${baseURL}/api/admin/all-reports`);\n                if (!response.ok) {\n                    throw new Error('Failed to fetch reports');\n                }\n                const data = await response.json();\n                setReports(data);\n            } catch (error) {\n                console.error('Error loading reports:', error);\n                setError(error.message);\n            }\n        };\n\n        fetchReports();\n    }, []);\n\n    return (\n        <div className=\"map-container\">\n        <h2 className=\"header\">Animal Cruelty Geotagged Reports</h2>\n            <div className='legend'>\n            <h4>Legend</h4>\n                    <div className=\"legend-item\">\n                        <span className=\"legend-color\" style={{ backgroundColor: normalReportColor }}></span>\n                        <span>Processing Reports</span>\n                    </div>\n                    <div className=\"legend-item\">\n                        <span className=\"legend-color\" style={{ backgroundColor: falseReportColor }}></span>\n                        <span>False Reports</span>\n                    </div>\n                    <div className=\"legend-item\">\n                        <span className=\"legend-color\" style={{ backgroundColor: rescuedColor }}></span>\n                        <span>Rescued Reports</span>\n                    </div>\n            </div>\n            <div className='sidebar-component'>\n                <Sidebar />\n            </div>\n            {error && <div className=\"error\">{error}</div>}\n            <div className=\"map-sidebar\">\n                <h3>Reports List</h3>\n                {reports.map((report, index) => (\n                    <div key={index} className=\"report-item\">\n                        <div className=\"report-container\">\n                            <b>{report.animal_type}</b><br />\n                            <span>{report.animal_details}</span><br />\n                            <img src={report.image_url} alt=\"Animal Report\" style={{ width: '80px', height: '80px' }} /><br />\n                            <span>Reported on: {new Date(report.accident_date).toLocaleDateString()}</span>\n                        </div>\n                    </div>\n                ))}\n            </div>\n            <MapContainer center={[7.1907, 125.4553]} zoom={13} style={{ height: '100%', width: '100%' }}>\n                <TileLayer\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                />\n                {reports.map((report, index) => {\n                    const lat = parseFloat(report.latitude);\n                    const lng = parseFloat(report.longitude);\n                    let markerIcon;\n\n                    if (report.status === 'False Report') {\n                        markerIcon = createMarkerIcon(falseReportColor); \n                    } else if (report.status === 'Rescued') {\n                        markerIcon = createMarkerIcon(rescuedColor); \n                    } else {\n                        markerIcon = createMarkerIcon(normalReportColor); \n                    }\n\n                    if (!isNaN(lat) && !isNaN(lng)) {\n                        return (\n                            <Marker key={index} position={[lat, lng]} icon={markerIcon}>\n                                <Popup>\n                                    <b>{report.animal_type}</b><br />\n                                    {report.animal_details}<br />\n                                    <img src={report.image_url} alt=\"Animal Report\" style={{ width: '100px', height: '100px' }} /><br />\n                                    Reported on: {new Date(report.accident_date).toLocaleDateString()}\n                                </Popup>\n                            </Marker>\n                        );\n                    }\n                    return null;\n                })}\n            </MapContainer>\n        </div>\n    );\n};\n\nexport default MapView;\n\n","import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom'; \nimport { FaTachometerAlt, FaFileAlt, FaHeart, FaPaw, FaCogs, FaCalendarAlt, FaUsers, FaSignOutAlt, FaMap } from 'react-icons/fa'; \n\nimport '../style/Sidebar.css';\nimport ConfirmationModal from './ConfirmationModal'; \nimport { useAuth } from '../context/AuthContext'; \n\nconst Sidebar = () => {\n  const { logout } = useAuth(); \n  const [isModalOpen, setModalOpen] = useState(false);\n  const navigate = useNavigate();\n\n  const handleLogoutClick = () => {\n    setModalOpen(true); \n  };\n\n  const confirmLogout = () => {\n    logout(); \n    navigate('/'); \n    alert(\"Successfully logged out!\"); \n  };\n\n  const cancelLogout = () => {\n    setModalOpen(false);\n  };\n\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar-header\">\n        <h2>Admin</h2>\n      </div>\n      <ul className=\"sidebar-list\">\n        <li>\n          <Link to=\"/dashboard\" className=\"sidebar-link\">\n            <FaTachometerAlt className=\"sidebar-icon\" /> Dashboard\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/reports\" className=\"sidebar-link\">\n            <FaFileAlt className=\"sidebar-icon\" /> Reports\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/adopt-animal\" className=\"sidebar-link\">\n            <FaHeart className=\"sidebar-icon\" /> Adoptions\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/animals\" className=\"sidebar-link\">\n            <FaPaw className=\"sidebar-icon\" /> Animals\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/events\" className=\"sidebar-link\">\n            <FaCalendarAlt className=\"sidebar-icon\" /> Events\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/rescuers\" className=\"sidebar-link\">\n            <FaUsers className=\"sidebar-icon\" /> Rescuers\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/maps\" className=\"sidebar-link\"> \n            <FaMap className=\"sidebar-icon\" /> Map\n          </Link>\n        </li>\n      </ul>\n      <div className=\"sidebar-footer\">\n        <button onClick={handleLogoutClick} className=\"sidebar-link logout-button\">\n          <FaSignOutAlt className=\"sidebar-icon\" /> Logout\n        </button>\n      </div>\n\n     \n      <ConfirmationModal\n        isOpen={isModalOpen}\n        message=\"Are you sure you want to log out?\"\n        onConfirm={confirmLogout}\n        onCancel={cancelLogout}\n      />\n    </div>\n  );\n};\n\nexport default Sidebar;\n"],"names":["_ref","isOpen","message","onConfirm","onCancel","title","confirmText","cancelText","_jsx","className","children","_jsxs","onClick","createMarkerIcon","color","L","html","renderToString","style","backgroundColor","borderRadius","padding","PetsIcon","fontSize","iconSize","iconAnchor","popupAnchor","normalReportColor","falseReportColor","rescuedColor","MapView","reports","setReports","useState","error","setError","useEffect","async","response","fetch","ok","Error","data","json","console","fetchReports","Sidebar","map","report","index","animal_type","animal_details","src","image_url","alt","width","height","Date","accident_date","toLocaleDateString","MapContainer","center","zoom","TileLayer","url","attribution","lat","parseFloat","latitude","lng","longitude","markerIcon","status","isNaN","Marker","position","icon","Popup","logout","useAuth","isModalOpen","setModalOpen","navigate","useNavigate","Link","to","FaTachometerAlt","FaFileAlt","FaHeart","FaPaw","FaCalendarAlt","FaUsers","FaMap","handleLogoutClick","FaSignOutAlt","ConfirmationModal","confirmLogout","alert","cancelLogout"],"sourceRoot":""}