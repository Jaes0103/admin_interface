{"version":3,"file":"static/js/376.9cf6518b.chunk.js","mappings":"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","sources":["components/AddAnimalModal.js","components/UpdateAnimalModal.js","components/DeleteConfirmationModal.js","components/AnimalListPage.js","components/ConfirmationModal.js","components/Sidebar.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport \"../style/AddAnimalModal.css\"\r\n\r\nconst AddAnimalModal = ({ isOpen, onClose, onAddAnimal }) => {\r\n    const [name, setName] = useState('');\r\n    const [type, setType] = useState('');\r\n    const [age, setAge] = useState('');\r\n    const [breed, setBreed] = useState('');\r\n    const [location, setLocation] = useState('');\r\n    const [personality, setPersonality] = useState('');\r\n    const [status, setStatus] = useState('');\r\n    const [imgFile, setImgFile] = useState(null); // State for image file\r\n    const [gender, setGender] = useState('');\r\n    const [background, setBackground] = useState(''); // State for background text field\r\n\r\n    const handleImageChange = (e) => {\r\n        setImgFile(e.target.files[0]); // Update state with selected file\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const newAnimal = { \r\n            name, \r\n            type, \r\n            age, \r\n            breed, \r\n            location, \r\n            personality, \r\n            status, \r\n            gender,\r\n            background // Include the background field in the object\r\n        };\r\n\r\n        // If an image file is selected, add it to the newAnimal object\r\n        if (imgFile) {\r\n            newAnimal.imgFile = imgFile; // Include the image file in the object\r\n        }\r\n\r\n        onAddAnimal(newAnimal);\r\n        // Reset the form\r\n        setName('');\r\n        setType('');\r\n        setAge('');\r\n        setBreed('');\r\n        setLocation('');\r\n        setPersonality('');\r\n        setStatus('');\r\n        setGender('');\r\n        setBackground(''); // Reset background field\r\n        setImgFile(null); // Reset image file\r\n    };\r\n\r\n    if (!isOpen) return null;\r\n\r\n    return (\r\n        <div className=\"modal-overlay\"> {/* Modal overlay for background */}\r\n            <div className=\"modal-content\"> {/* Modal content area */}\r\n                <h2>Add New Animal</h2>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                        placeholder=\"Name\"\r\n                        required\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        value={type}\r\n                        onChange={(e) => setType(e.target.value)}\r\n                        placeholder=\"Type\"\r\n                        required\r\n                    />\r\n                    <input\r\n                        type=\"number\"\r\n                        value={age}\r\n                        onChange={(e) => setAge(e.target.value)}\r\n                        placeholder=\"Age\"\r\n                        required\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        value={breed}\r\n                        onChange={(e) => setBreed(e.target.value)}\r\n                        placeholder=\"Breed\"\r\n                        required\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        value={location}\r\n                        onChange={(e) => setLocation(e.target.value)}\r\n                        placeholder=\"Location\"\r\n                        required\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        value={personality}\r\n                        onChange={(e) => setPersonality(e.target.value)}\r\n                        placeholder=\"Personality\"\r\n                        required\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        value={status}\r\n                        onChange={(e) => setStatus(e.target.value)}\r\n                        placeholder=\"Status\"\r\n                        required\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        value={background} // Add input for background\r\n                        onChange={(e) => setBackground(e.target.value)}\r\n                        placeholder=\"Background\"\r\n                        required\r\n                    />\r\n                    {/* Image input for picking the image */}\r\n                    <input\r\n                        type=\"file\"\r\n                        onChange={handleImageChange} \r\n                        accept=\"image/*\" \r\n                        required\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        value={gender}\r\n                        onChange={(e) => setGender(e.target.value)}\r\n                        placeholder=\"Gender\"\r\n                        required\r\n                    />\r\n                    <button type=\"submit\">Add Animal</button>\r\n                    <button type=\"button\" onClick={onClose}>Cancel</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddAnimalModal;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nconst UpdateAnimalModal = ({ isOpen, onClose, onUpdateAnimal, animal }) => {\r\n    const [name, setName] = useState('');\r\n    const [type, setType] = useState('');\r\n    const [age, setAge] = useState('');\r\n    const [breed, setBreed] = useState('');\r\n    const [location, setLocation] = useState('');\r\n    const [personality, setPersonality] = useState('');\r\n    const [status, setStatus] = useState('');\r\n    const [imgFile, setImgFile] = useState(null); // State for image file\r\n    const [gender, setGender] = useState('');\r\n    const [background, setBackground] = useState(''); // State for background text field\r\n\r\n    useEffect(() => {\r\n        if (animal) {\r\n            setName(animal.name);\r\n            setType(animal.type);\r\n            setAge(animal.age);\r\n            setBreed(animal.breed);\r\n            setLocation(animal.location);\r\n            setPersonality(animal.personality);\r\n            setStatus(animal.status);\r\n            setGender(animal.gender);\r\n            setBackground(animal.background);\r\n        }\r\n    }, [animal]);\r\n\r\n    const handleImageChange = (e) => {\r\n        setImgFile(e.target.files[0]);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const updatedAnimal = { \r\n            name, \r\n            type, \r\n            age, \r\n            breed, \r\n            location, \r\n            personality, \r\n            status, \r\n            gender,\r\n            background\r\n        };\r\n\r\n        if (imgFile) {\r\n            updatedAnimal.imgFile = imgFile; // Include the image file in the object\r\n        }\r\n\r\n        onUpdateAnimal(animal.id, updatedAnimal);\r\n        onClose(); // Close the modal after submitting\r\n    };\r\n\r\n    if (!isOpen) return null;\r\n\r\n    return (\r\n        <div className=\"modal-overlay\"> \r\n            <div className=\"modal-content\"> \r\n                <h2>Update Animal</h2>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                        placeholder=\"Name\"\r\n                        required\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        value={type}\r\n                        onChange={(e) => setType(e.target.value)}\r\n                        placeholder=\"Type\"\r\n                        required\r\n                    />\r\n                    <input\r\n                        type=\"number\"\r\n                        value={age}\r\n                        onChange={(e) => setAge(e.target.value)}\r\n                        placeholder=\"Age\"\r\n                        required\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        value={breed}\r\n                        onChange={(e) => setBreed(e.target.value)}\r\n                        placeholder=\"Breed\"\r\n                        required\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        value={location}\r\n                        onChange={(e) => setLocation(e.target.value)}\r\n                        placeholder=\"Location\"\r\n                        required\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        value={personality}\r\n                        onChange={(e) => setPersonality(e.target.value)}\r\n                        placeholder=\"Personality\"\r\n                        required\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        value={status}\r\n                        onChange={(e) => setStatus(e.target.value)}\r\n                        placeholder=\"Status\"\r\n                        required\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        value={background}\r\n                        onChange={(e) => setBackground(e.target.value)}\r\n                        placeholder=\"Background\"\r\n                        required\r\n                    />\r\n                    <input\r\n                        type=\"file\"\r\n                        onChange={handleImageChange}\r\n                        accept=\"image/*\"\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        value={gender}\r\n                        onChange={(e) => setGender(e.target.value)}\r\n                        placeholder=\"Gender\"\r\n                        required\r\n                    />\r\n                    <button type=\"submit\">Update Animal</button>\r\n                    <button type=\"button\" onClick={onClose}>Cancel</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UpdateAnimalModal;\r\n","import React from 'react';\r\n\r\n\r\nconst DeleteConfirmationModal = ({ isOpen, onClose, onDeleteConfirm }) => {\r\n    if (!isOpen) return null;\r\n\r\n    return (\r\n        <div className=\"modal-overlay\">\r\n            <div className=\"modal-content\">\r\n                <h2>Confirm Deletion</h2>\r\n                <p>Are you sure you want to delete this animal?</p>\r\n                <div className=\"modal-actions\">\r\n                    <button className=\"cancel-button\" onClick={onClose}>Cancel</button>\r\n                    <button className=\"confirm-button\" onClick={onDeleteConfirm}>Confirm</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DeleteConfirmationModal;\r\n","import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPaw, faChevronLeft, faChevronRight, faPlus, faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport '../style/AnimalListPage.css';\nimport Sidebar from './Sidebar';\nimport AddAnimalModal from '../components/AddAnimalModal';\nimport UpdateAnimalModal from '../components/UpdateAnimalModal';\nimport DeleteConfirmationModal from '../components/DeleteConfirmationModal';\n\n\nconst AnimalList = () => {\n    const [animals, setAnimals] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [searchQuery, setSearchQuery] = useState('');\n    const [entriesPerPage, setEntriesPerPage] = useState(10);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [modalOpen, setModalOpen] = useState(false);\n    const [updateModalOpen, setUpdateModalOpen] = useState(false);\n    const [deleteModalOpen, setDeleteModalOpen] = useState(false); // State to control delete modal\n    const [selectedAnimal, setSelectedAnimal] = useState(null);\n    const [animalToDelete, setAnimalToDelete] = useState(null);\n    const [sortOrder, setSortOrder] = useState('name');\n    const navigate = useNavigate();\n\n\n    // Fetch animals from the API\n    const fetchAnimals = async () => {\n        try {\n            const response = await axios.get(`${process.env.REACT_APP_BASE_URL}/api/admin/animals`);\n            setAnimals(response.data.animals);\n        } catch (err) {\n            console.error('Error fetching animals:', err.response ? err.response.data : err.message);\n            setError('Error fetching animals');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        fetchAnimals();\n    }, []);\n\n    // Navigate to animal details page\n    const handleViewClick = (id) => {\n        navigate(`/animals/${id}/details`);\n    };\n\n    // Handle search input change\n    const handleSearchChange = (e) => {\n        setSearchQuery(e.target.value.toLowerCase());\n        setCurrentPage(1);\n    };\n\n    // Handle entries per page change\n    const handleEntriesChange = (e) => {\n        setEntriesPerPage(parseInt(e.target.value));\n        setCurrentPage(1);\n    };\n\n    // Handle adding a new animal\n    const handleAddAnimal = async (newAnimal) => {\n        const formData = new FormData();\n        formData.append('name', newAnimal.name);\n        formData.append('type', newAnimal.type);\n        formData.append('age', newAnimal.age);\n        formData.append('breed', newAnimal.breed);\n        formData.append('location', newAnimal.location);\n        formData.append('personality', newAnimal.personality);\n        formData.append('status', newAnimal.status);\n        formData.append('gender', newAnimal.gender);\n        formData.append('background', newAnimal.background);\n\n        if (newAnimal.imgFile) {\n            formData.append('imgFile', newAnimal.imgFile); // Ensure the image is included\n        }\n\n        try {\n            await axios.post(`${process.env.REACT_APP_BASE_URL}/api/admin/add-animal`, formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data', // Let the browser set this automatically\n                },\n            });\n            fetchAnimals(); // Refresh the list after adding\n            setModalOpen(false); // Close the modal after success\n        } catch (err) {\n            setError('Error adding animal');\n            console.error('Error adding animal:', err.response ? err.response.data : err.message); // Log more details\n        }\n    };\n\n    // Handle updating an animal\n    const handleUpdateAnimal = async (id, updatedAnimal) => {\n        const formData = new FormData();\n        formData.append('name', updatedAnimal.name);\n        formData.append('type', updatedAnimal.type);\n        formData.append('age', updatedAnimal.age);\n        formData.append('breed', updatedAnimal.breed);\n        formData.append('location', updatedAnimal.location);\n        formData.append('personality', updatedAnimal.personality);\n        formData.append('status', updatedAnimal.status);\n        formData.append('gender', updatedAnimal.gender);\n\n        if (updatedAnimal.imgFile) {\n            formData.append('imgFile', updatedAnimal.imgFile); \n        }\n\n        try {\n            const response = await axios.put(`${process.env.REACT_APP_BASE_URL}/api/admin/animals/${id}`, formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data', \n                },\n            });\n            fetchAnimals(); \n            setUpdateModalOpen(false);\n        } catch (err) {\n            setError('Error updating animal');\n            console.error('Error updating animal:', err.response ? err.response.data : err.message);\n        }\n    };\n\n    const handleDeleteClick = (animal) => {\n        setAnimalToDelete(animal); \n        setDeleteModalOpen(true);\n    };\n\n    const confirmDelete = async (id) => {\n        try {\n            await axios.delete(`${process.env.REACT_APP_BASE_URL}/api/admin/animals/${id}`);\n            fetchAnimals(); \n        } catch (err) {\n            setError('Error deleting animal');\n            console.error('Error deleting animal:', err.response ? err.response.data : err.message);\n        } finally {\n            setDeleteModalOpen(false); \n        }\n    };\n    // Handle clicking the edit button\n    const handleEditClick = (animal) => {\n        setSelectedAnimal(animal);\n        setUpdateModalOpen(true);\n    };\n\n    // Filter animals based on search query\n    const filteredAnimals = animals.filter(animal =>\n        (animal.name && animal.name.toLowerCase().includes(searchQuery)) ||\n        (animal.type && animal.type.toLowerCase().includes(searchQuery)) ||\n        (animal.breed && animal.breed.toLowerCase().includes(searchQuery))\n    );\n\n    // Sort animals based on selected order\n    const sortedAnimals = [...filteredAnimals].sort((a, b) => {\n        if (sortOrder === 'name') {\n            return a.name.localeCompare(b.name);\n        } else if (sortOrder === 'age') {\n            return a.age - b.age;\n        }\n        return 0; // Default case\n    });\n\n    const indexOfLastAnimal = currentPage * entriesPerPage;\n    const indexOfFirstAnimal = indexOfLastAnimal - entriesPerPage;\n    const currentAnimals = sortedAnimals.slice(indexOfFirstAnimal, indexOfLastAnimal);\n    const totalPages = Math.ceil(sortedAnimals.length / entriesPerPage);\n\n    const handleNext = () => {\n        if (currentPage < totalPages) {\n            setCurrentPage(currentPage + 1);\n        }\n    };\n\n    const handlePrevious = () => {\n        if (currentPage > 1) {\n            setCurrentPage(currentPage - 1);\n        }\n    };\n\n    if (loading) {\n        return <div>Loading animals...</div>;\n    }\n\n    if (error) {\n        return <div>{error}</div>;\n    }\n\n    return (\n        <div className=\"table-container\">\n            <h1>Animals in the Shelter</h1>\n            <Sidebar />\n            <button className=\"add-animal-button\" onClick={() => setModalOpen(true)}>\n                <FontAwesomeIcon icon={faPlus} /> Add Animal\n            </button>\n            <AddAnimalModal\n                isOpen={modalOpen}\n                onClose={() => setModalOpen(false)}\n                onAddAnimal={handleAddAnimal}\n            />\n            <UpdateAnimalModal\n                isOpen={updateModalOpen}\n                onClose={() => setUpdateModalOpen(false)}\n                onUpdateAnimal={handleUpdateAnimal}\n                animal={selectedAnimal}\n            />\n             <DeleteConfirmationModal\n                isOpen={deleteModalOpen}\n                onClose={() => setDeleteModalOpen(false)}\n                onDeleteConfirm={() => confirmDelete(animalToDelete?.id)} \n            />\n            <div className=\"controls\">\n                <label htmlFor=\"entries\">Show</label>\n                <select id=\"entries\" value={entriesPerPage} onChange={handleEntriesChange}>\n                    <option value=\"5\">5</option>\n                    <option value=\"10\">10</option>\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                </select>\n                <span> entries</span>\n                <input\n                    type=\"text\"\n                    placeholder=\"Search...\"\n                    value={searchQuery}\n                    onChange={handleSearchChange}\n                    className=\"search-input\"\n                />\n                <label htmlFor=\"sort\">Sort by:</label>\n                <select id=\"sort\" value={sortOrder} onChange={(e) => setSortOrder(e.target.value)}>\n                    <option value=\"name\">Name</option>\n                    <option value=\"age\">Age</option>\n                </select>\n            </div>\n\n            {filteredAnimals.length === 0 ? (\n                <p>No animals found in the shelter.</p>\n            ) : (\n                <>\n                    <table className=\"animal-table\">\n                        <thead>\n                            <tr>\n                                <th>Image</th>\n                                <th>Name</th>\n                                <th>Type</th>\n                                <th>Age</th>\n                                <th>Breed</th>\n                                <th>Gender</th>\n                                <th>Location</th>\n                                <th>Personality</th>\n                                <th>Status</th>\n                                <th>Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {currentAnimals.map(animal => (\n                                <tr key={animal.id}>\n                                    <td>\n                                        {animal.imgurl ? (\n                                            <img\n                                                src={animal.imgurl}\n                                                alt={animal.name}\n                                                className=\"animal-image\"\n                                            />\n                                        ) : (\n                                            <div className=\"paw-icon-container\">\n                                                <FontAwesomeIcon icon={faPaw} className=\"default-paw-icon\" />\n                                            </div>\n                                        )}\n                                    </td>\n                                    <td>{animal.name}</td>\n                                    <td>{animal.type}</td>\n                                    <td>{animal.age}</td>\n                                    <td>{animal.breed}</td>\n                                    <td>{animal.gender}</td>\n                                    <td>{animal.location}</td>\n                                    <td>{animal.personality}</td>\n                                    <td>{animal.status}</td>\n                                    <td>\n                                        <button onClick={() => handleEditClick(animal)}>\n                                            <FontAwesomeIcon icon={faEdit} />\n                                        </button>\n                                        <button onClick={() => handleDeleteClick(animal)} className=\"delete-button\">\n                                            <FontAwesomeIcon icon={faTrash} />\n                                        </button>\n                                        <button onClick={() => handleViewClick(animal.id)}>View Details</button>\n                                        \n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                    <div className=\"pagination\">\n                        <button onClick={handlePrevious} disabled={currentPage === 1}>\n                            <FontAwesomeIcon icon={faChevronLeft} />\n                        </button>\n                        <span>{currentPage} of {totalPages}</span>\n                        <button onClick={handleNext} disabled={currentPage === totalPages}>\n                            <FontAwesomeIcon icon={faChevronRight} />\n                        </button>\n                    </div>\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default AnimalList;\n","import React from 'react';\nimport '../style/ConfirmationModal.css'; \n\nconst ConfirmationModal = ({ isOpen, message, onConfirm, onCancel, title = \"Confirmation\", confirmText = \"Yes\", cancelText = \"No\" }) => {\n    if (!isOpen) return null; \n\n    return (\n        <div className=\"confirmation-modal\">\n            <div className=\"modal-content\">\n                <h2>{title}</h2>\n                <p>{message}</p>\n                <div className=\"modal-buttons\">\n                    <button onClick={onConfirm} className=\"confirm-button\">{confirmText}</button>\n                    <button onClick={onCancel} className=\"cancel-button\">{cancelText}</button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ConfirmationModal;\n","import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom'; \nimport { FaTachometerAlt, FaFileAlt, FaHeart, FaPaw, FaCogs, FaCalendarAlt, FaUsers, FaSignOutAlt, FaMap } from 'react-icons/fa'; \n\nimport '../style/Sidebar.css';\nimport ConfirmationModal from './ConfirmationModal'; \nimport { useAuth } from '../context/AuthContext'; \n\nconst Sidebar = () => {\n  const { logout } = useAuth(); \n  const [isModalOpen, setModalOpen] = useState(false);\n  const navigate = useNavigate();\n\n  const handleLogoutClick = () => {\n    setModalOpen(true); \n  };\n\n  const confirmLogout = () => {\n    logout(); \n    navigate('/'); \n    alert(\"Successfully logged out!\"); \n  };\n\n  const cancelLogout = () => {\n    setModalOpen(false);\n  };\n\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar-header\">\n        <h2>Admin</h2>\n      </div>\n      <ul className=\"sidebar-list\">\n        <li>\n          <Link to=\"/dashboard\" className=\"sidebar-link\">\n            <FaTachometerAlt className=\"sidebar-icon\" /> Dashboard\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/reports\" className=\"sidebar-link\">\n            <FaFileAlt className=\"sidebar-icon\" /> Reports\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/adopt-animal\" className=\"sidebar-link\">\n            <FaHeart className=\"sidebar-icon\" /> Adoptions\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/animals\" className=\"sidebar-link\">\n            <FaPaw className=\"sidebar-icon\" /> Animals\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/events\" className=\"sidebar-link\">\n            <FaCalendarAlt className=\"sidebar-icon\" /> Events\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/rescuers\" className=\"sidebar-link\">\n            <FaUsers className=\"sidebar-icon\" /> Rescuers\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/maps\" className=\"sidebar-link\"> \n            <FaMap className=\"sidebar-icon\" /> Map\n          </Link>\n        </li>\n      </ul>\n      <div className=\"sidebar-footer\">\n        <button onClick={handleLogoutClick} className=\"sidebar-link logout-button\">\n          <FaSignOutAlt className=\"sidebar-icon\" /> Logout\n        </button>\n      </div>\n\n     \n      <ConfirmationModal\n        isOpen={isModalOpen}\n        message=\"Are you sure you want to log out?\"\n        onConfirm={confirmLogout}\n        onCancel={cancelLogout}\n      />\n    </div>\n  );\n};\n\nexport default Sidebar;\n"],"names":["_ref","isOpen","onClose","onAddAnimal","name","setName","useState","type","setType","age","setAge","breed","setBreed","location","setLocation","personality","setPersonality","status","setStatus","imgFile","setImgFile","gender","setGender","background","setBackground","_jsxs","className","children","_jsx","onSubmit","e","preventDefault","newAnimal","value","onChange","target","placeholder","required","files","accept","onClick","onUpdateAnimal","animal","useEffect","updatedAnimal","id","onDeleteConfirm","AnimalList","animals","setAnimals","loading","setLoading","error","setError","searchQuery","setSearchQuery","entriesPerPage","setEntriesPerPage","currentPage","setCurrentPage","modalOpen","setModalOpen","updateModalOpen","setUpdateModalOpen","deleteModalOpen","setDeleteModalOpen","selectedAnimal","setSelectedAnimal","animalToDelete","setAnimalToDelete","sortOrder","setSortOrder","navigate","useNavigate","fetchAnimals","async","response","axios","get","data","err","console","message","filteredAnimals","filter","toLowerCase","includes","sortedAnimals","sort","a","b","localeCompare","indexOfLastAnimal","indexOfFirstAnimal","currentAnimals","slice","totalPages","Math","ceil","length","Sidebar","FontAwesomeIcon","icon","faPlus","AddAnimalModal","formData","FormData","append","post","headers","UpdateAnimalModal","put","DeleteConfirmationModal","delete","confirmDelete","htmlFor","parseInt","_Fragment","map","imgurl","src","alt","faPaw","handleEditClick","faEdit","handleDeleteClick","faTrash","handleViewClick","handlePrevious","disabled","faChevronLeft","handleNext","faChevronRight","onConfirm","onCancel","title","confirmText","cancelText","logout","useAuth","isModalOpen","Link","to","FaTachometerAlt","FaFileAlt","FaHeart","FaPaw","FaCalendarAlt","FaUsers","FaMap","handleLogoutClick","FaSignOutAlt","ConfirmationModal","confirmLogout","alert","cancelLogout"],"sourceRoot":""}