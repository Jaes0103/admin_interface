{"version":3,"file":"static/js/336.e2eb6780.chunk.js","mappings":"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","sources":["components/ConfirmationModal.js","components/DashboardPage.js","components/Sidebar.js"],"sourcesContent":["import React from 'react';\nimport '../style/ConfirmationModal.css'; \n\nconst ConfirmationModal = ({ isOpen, message, onConfirm, onCancel, title = \"Confirmation\", confirmText = \"Yes\", cancelText = \"No\" }) => {\n    if (!isOpen) return null; \n\n    return (\n        <div className=\"confirmation-modal\">\n            <div className=\"modal-content\">\n                <h2>{title}</h2>\n                <p>{message}</p>\n                <div className=\"modal-buttons\">\n                    <button onClick={onConfirm} className=\"confirm-button\">{confirmText}</button>\n                    <button onClick={onCancel} className=\"cancel-button\">{cancelText}</button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ConfirmationModal;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport '../style/DashboardPage.css'; \nimport Sidebar from './Sidebar'; \nimport { Line, Doughnut } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, ArcElement, Title, Tooltip, Legend } from 'chart.js';\nimport ChartDataLabels from 'chartjs-plugin-datalabels'; \nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\n\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, ArcElement, Title, Tooltip, Legend, ChartDataLabels);\n\nconst DashboardPage = () => {\n  const [reports, setReports] = useState([]);\n  const [adoptableAnimals, setAdoptableAnimals] = useState([]);\n  const [chartData, setChartData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [totalReports, setTotalReports] = useState(0);\n\n  // Pagination states\n  const [currentPageReports, setCurrentPageReports] = useState(1);\n  const [currentPageAnimals, setCurrentPageAnimals] = useState(1);\n  const itemsPerPage = 5;\n\n  useEffect(() => {\n    const fetchDashboardData = async () => {\n      try {\n        const url = `${process.env.REACT_APP_BASE_URL}/api/admin/dashboard`;\n        const response = await axios.get(url);\n        \n        if (response.data && response.data.reports && response.data.adoptableAnimals) {\n          setReports(response.data.reports);\n          setAdoptableAnimals(response.data.adoptableAnimals);\n          const reportCounts = getCountsByMonth(response.data.reports, 'created_at');\n          const rescuedCounts = getCountsByMonth(response.data.rescuedAnimals, 'rescued_date');\n          setChartData(generateChartData(reportCounts, rescuedCounts));\n          setTotalReports(response.data.reports.length);\n        } else {\n          setError('Invalid response structure');\n        }\n      } catch (err) {\n        console.error('Fetch error:', err.response ? err.response.data : err);\n        setError('Error fetching data');\n      } finally {\n        setLoading(false);\n      }\n    };\n  \n    fetchDashboardData();\n  }, []);\n\n  const getCountsByMonth = (data, dateKey) => {\n    const counts = new Array(12).fill(0);\n    data.forEach(item => {\n      const date = new Date(item[dateKey]);\n      const month = date.getMonth(); \n      counts[month]++;\n    });\n    return counts;\n  };\n\n  const generateChartData = (reportCounts, rescuedCounts) => {\n    return {\n      labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n      datasets: [\n        {\n          label: 'Reports',\n          data: reportCounts,\n          borderColor: 'rgba(255, 99, 132, 1)',\n          backgroundColor: 'rgba(255, 99, 132, 0.2)',\n          fill: true\n        },\n        {\n          label: 'Rescued Animals',\n          data: rescuedCounts,\n          borderColor: 'rgba(138, 126, 190, 1)',\n          backgroundColor: 'rgba(138, 126, 190, 0.4)',\n          fill: true,\n        }\n      ]\n    };\n  };\n\n  const generateDoughnutData = () => {\n    return {\n      labels: ['Reported Animals', 'Remaining Capacity'],\n      datasets: [\n        {\n          data: [totalReports, 1000 - totalReports],\n          backgroundColor: ['rgba(138, 126, 190, 1)', 'rgba(200, 200, 200, 0.5)'],\n          borderColor: ['rgba(138, 126, 190, 1)', 'rgba(200, 200, 200, 0.5)'],\n          borderWidth: 1,\n        },\n      ],\n    };\n  };\n\n  const doughnutOptions = {\n    responsive: true,\n    maintainAspectRatio: false, \n    plugins: {\n      legend: {\n        display: false,\n      },\n      tooltip: {\n        enabled: false,\n      },\n      datalabels: {\n        display: true,\n        color: 'rgba(138, 126, 190, 1)',\n        formatter: (value, context) => {\n          if (context.dataIndex === 0) {\n            return `${totalReports}`; \n          }\n          return ''; \n        },\n        font: {\n          weight: 'bold',\n          size: '30',\n          color: 'rgba(138, 126, 190, 1)', \n        },\n        anchor: 'center',\n        align: 'center',\n      },\n    },\n    cutout: '75%', \n    rotation: 240,\n    circumference: 240,\n  };\n\n  // Pagination logic for reports\n  const indexOfLastReport = currentPageReports * itemsPerPage;\n  const indexOfFirstReport = indexOfLastReport - itemsPerPage;\n  const currentReports = reports.slice(indexOfFirstReport, indexOfLastReport);\n  const totalPagesReports = Math.ceil(reports.length / itemsPerPage);\n\n  const handleNextReports = () => {\n    if (currentPageReports < totalPagesReports) {\n      setCurrentPageReports(currentPageReports + 1);\n    }\n  };\n\n  const handlePreviousReports = () => {\n    if (currentPageReports > 1) {\n      setCurrentPageReports(currentPageReports - 1);\n    }\n  };\n\n  // Pagination logic for adoptable animals\n  const indexOfLastAnimal = currentPageAnimals * itemsPerPage;\n  const indexOfFirstAnimal = indexOfLastAnimal - itemsPerPage;\n  const currentAnimals = adoptableAnimals.slice(indexOfFirstAnimal, indexOfLastAnimal);\n  const totalPagesAnimals = Math.ceil(adoptableAnimals.length / itemsPerPage);\n\n  const handleNextAnimals = () => {\n    if (currentPageAnimals < totalPagesAnimals) {\n      setCurrentPageAnimals(currentPageAnimals + 1);\n    }\n  };\n\n  const handlePreviousAnimals = () => {\n    if (currentPageAnimals > 1) {\n      setCurrentPageAnimals(currentPageAnimals - 1);\n    }\n  };\n\n  if (loading) {\n    return <p>Loading data...</p>;\n  }\n\n  if (error) {\n    return <p>{error}</p>;\n  }\n\n  return (\n    <div className=\"dashboard-container\">\n      <Sidebar />\n      <div className=\"main-content\">\n        <h1>Admin Dashboard</h1>\n        \n        <section className=\"dashboard-section\">\n          <h2>Reports</h2>\n          {currentReports.length === 0 ? (\n            <p>No reports available.</p>\n          ) : (\n            <table className=\"dashboard-table\">\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>Animal Type</th>\n                  <th>Details</th>\n                  <th>Cruelty Details</th>\n                  <th>Date Created</th>\n                  <th>Status</th>\n                </tr>\n              </thead>\n              <tbody>\n                {currentReports.map((report) => (\n                  <tr key={report.id}>\n                    <td>{report.id}</td>\n                    <td>{report.animal_type}</td>\n                    <td>{report.animal_details}</td>\n                    <td>{report.cruelty_details}</td>\n                    <td>{new Date(report.created_at).toLocaleDateString()}</td>\n                    <td>{report.status}</td> \n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          )}\n          <div className=\"pagination\">\n            <button onClick={handlePreviousReports} disabled={currentPageReports === 1}>\n              <FontAwesomeIcon icon={faChevronLeft} />\n            </button>\n            <span>{currentPageReports} of {totalPagesReports}</span>\n            <button onClick={handleNextReports} disabled={currentPageReports === totalPagesReports}>\n              <FontAwesomeIcon icon={faChevronRight} />\n            </button>\n          </div>\n        </section>\n\n        <section className=\"dashboard-section\">\n          <h2>Adoptable Animals</h2>\n          {currentAnimals.length === 0 ? (\n            <p>No adoptable animals available.</p>\n          ) : (\n            <table className=\"dashboard-table\">\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>Name</th>\n                  <th>Type</th>\n                  <th>Breed</th>\n                  <th>Age</th>\n                  <th>Personality</th>\n                  <th>Health Status</th>\n                </tr>\n              </thead>\n              <tbody>\n                {currentAnimals.map((animal) => (\n                  <tr key={animal.id}>\n                    <td>{animal.id}</td>\n                    <td>{animal.name}</td>\n                    <td>{animal.type}</td>\n                    <td>{animal.breed}</td>\n                    <td>{animal.age}</td>\n                    <td>{animal.personality}</td>\n                    <td>{animal.health_status}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          )}\n          <div className=\"pagination\">\n            <button onClick={handlePreviousAnimals} disabled={currentPageAnimals === 1}>\n              <FontAwesomeIcon icon={faChevronLeft} />\n            </button>\n            <span>{currentPageAnimals} of {totalPagesAnimals}</span>\n            <button onClick={handleNextAnimals} disabled={currentPageAnimals === totalPagesAnimals}>\n              <FontAwesomeIcon icon={faChevronRight} />\n            </button>\n          </div>\n        </section>\n      </div>\n\n      <div className='chart-position'>\n        <section className=\"chart-section\">\n          <h2>Reports vs Rescued Animals</h2>\n          {chartData ? (\n            <Line data={chartData} />\n          ) : (\n            <p>No data available for the chart.</p>\n          )}\n        </section>\n\n        <section className=\"doughnut-section\">\n          <h2>Total Reported Animals</h2>\n          <div className=\"doughnut-container\">\n            <Doughnut \n              data={generateDoughnutData()} \n              options={doughnutOptions}\n            />\n          </div>\n        </section>\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardPage;\n","import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom'; \nimport { FaTachometerAlt, FaFileAlt, FaHeart, FaPaw, FaCogs, FaCalendarAlt, FaUsers, FaSignOutAlt, FaMap } from 'react-icons/fa'; \n\nimport '../style/Sidebar.css';\nimport ConfirmationModal from './ConfirmationModal'; \nimport { useAuth } from '../context/AuthContext'; \n\nconst Sidebar = () => {\n  const { logout } = useAuth(); \n  const [isModalOpen, setModalOpen] = useState(false);\n  const navigate = useNavigate();\n\n  const handleLogoutClick = () => {\n    setModalOpen(true); \n  };\n\n  const confirmLogout = () => {\n    logout(); \n    navigate('/'); \n    alert(\"Successfully logged out!\"); \n  };\n\n  const cancelLogout = () => {\n    setModalOpen(false);\n  };\n\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar-header\">\n        <h2>Admin</h2>\n      </div>\n      <ul className=\"sidebar-list\">\n        <li>\n          <Link to=\"/dashboard\" className=\"sidebar-link\">\n            <FaTachometerAlt className=\"sidebar-icon\" /> Dashboard\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/reports\" className=\"sidebar-link\">\n            <FaFileAlt className=\"sidebar-icon\" /> Reports\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/adopt-animal\" className=\"sidebar-link\">\n            <FaHeart className=\"sidebar-icon\" /> Adoptions\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/animals\" className=\"sidebar-link\">\n            <FaPaw className=\"sidebar-icon\" /> Animals\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/events\" className=\"sidebar-link\">\n            <FaCalendarAlt className=\"sidebar-icon\" /> Events\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/rescuers\" className=\"sidebar-link\">\n            <FaUsers className=\"sidebar-icon\" /> Rescuers\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/maps\" className=\"sidebar-link\"> \n            <FaMap className=\"sidebar-icon\" /> Map\n          </Link>\n        </li>\n      </ul>\n      <div className=\"sidebar-footer\">\n        <button onClick={handleLogoutClick} className=\"sidebar-link logout-button\">\n          <FaSignOutAlt className=\"sidebar-icon\" /> Logout\n        </button>\n      </div>\n\n     \n      <ConfirmationModal\n        isOpen={isModalOpen}\n        message=\"Are you sure you want to log out?\"\n        onConfirm={confirmLogout}\n        onCancel={cancelLogout}\n      />\n    </div>\n  );\n};\n\nexport default Sidebar;\n"],"names":["_ref","isOpen","message","onConfirm","onCancel","title","confirmText","cancelText","_jsx","className","children","_jsxs","onClick","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","ArcElement","Title","Tooltip","Legend","ChartDataLabels","DashboardPage","reports","setReports","useState","adoptableAnimals","setAdoptableAnimals","chartData","setChartData","loading","setLoading","error","setError","totalReports","setTotalReports","currentPageReports","setCurrentPageReports","currentPageAnimals","setCurrentPageAnimals","useEffect","async","url","response","axios","get","data","reportCounts","getCountsByMonth","rescuedCounts","rescuedAnimals","generateChartData","length","err","console","fetchDashboardData","dateKey","counts","Array","fill","forEach","item","month","Date","getMonth","labels","datasets","label","borderColor","backgroundColor","doughnutOptions","responsive","maintainAspectRatio","plugins","legend","display","tooltip","enabled","datalabels","color","formatter","value","context","dataIndex","font","weight","size","anchor","align","cutout","rotation","circumference","indexOfLastReport","indexOfFirstReport","currentReports","slice","totalPagesReports","Math","ceil","indexOfLastAnimal","indexOfFirstAnimal","currentAnimals","totalPagesAnimals","Sidebar","map","report","id","animal_type","animal_details","cruelty_details","created_at","toLocaleDateString","status","handlePreviousReports","disabled","FontAwesomeIcon","icon","faChevronLeft","handleNextReports","faChevronRight","animal","name","type","breed","age","personality","health_status","handlePreviousAnimals","handleNextAnimals","Line","Doughnut","borderWidth","options","logout","useAuth","isModalOpen","setModalOpen","navigate","useNavigate","Link","to","FaTachometerAlt","FaFileAlt","FaHeart","FaPaw","FaCalendarAlt","FaUsers","FaMap","handleLogoutClick","FaSignOutAlt","ConfirmationModal","confirmLogout","alert","cancelLogout"],"sourceRoot":""}