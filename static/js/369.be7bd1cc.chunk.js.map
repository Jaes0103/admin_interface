{"version":3,"file":"static/js/369.be7bd1cc.chunk.js","mappings":"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","sources":["components/LazyImages.js","../node_modules/@mui/material/utils/createSimplePaletteValueFilter.js","../node_modules/@mui/material/Icon/iconClasses.js","../node_modules/@mui/material/Icon/Icon.js","components/LoginPage.js"],"sourcesContent":["// LazyImage.js\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport '../style/LazyImages.css'\r\n\r\nconst LazyImage = ({ src, alt }) => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const imgRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      (entries) => {\r\n        entries.forEach((entry) => {\r\n          if (entry.isIntersecting) {\r\n            setIsVisible(true);\r\n            observer.unobserve(entry.target);\r\n          }\r\n        });\r\n      },\r\n      { threshold: 0.1 }\r\n    );\r\n\r\n    if (imgRef.current) {\r\n      observer.observe(imgRef.current);\r\n    }\r\n\r\n    return () => {\r\n      if (imgRef.current) observer.unobserve(imgRef.current);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <img\r\n      ref={imgRef}\r\n      src={isVisible ? src : \"\"}\r\n      data-src={src}\r\n      alt={alt}\r\n      loading=\"lazy\"\r\n      style={{ opacity: isVisible ? 1 : 0.5, transition: \"opacity 0.5s\" }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default LazyImage;\r\n","/**\n * Type guard to check if the object has a \"main\" property of type string.\n *\n * @param obj - the object to check\n * @returns boolean\n */\nfunction hasCorrectMainProperty(obj) {\n  return typeof obj.main === 'string';\n}\n/**\n * Checks if the object conforms to the SimplePaletteColorOptions type.\n * The minimum requirement is that the object has a \"main\" property of type string, this is always checked.\n * Optionally, you can pass additional properties to check.\n *\n * @param obj - The object to check\n * @param additionalPropertiesToCheck - Array containing \"light\", \"dark\", and/or \"contrastText\"\n * @returns boolean\n */\nfunction checkSimplePaletteColorValues(obj, additionalPropertiesToCheck = []) {\n  if (!hasCorrectMainProperty(obj)) {\n    return false;\n  }\n  for (const value of additionalPropertiesToCheck) {\n    if (!obj.hasOwnProperty(value) || typeof obj[value] !== 'string') {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Creates a filter function used to filter simple palette color options.\n * The minimum requirement is that the object has a \"main\" property of type string, this is always checked.\n * Optionally, you can pass additional properties to check.\n *\n * @param additionalPropertiesToCheck - Array containing \"light\", \"dark\", and/or \"contrastText\"\n * @returns ([, value]: [any, PaletteColorOptions]) => boolean\n */\nexport default function createSimplePaletteValueFilter(additionalPropertiesToCheck = []) {\n  return ([, value]) => value && checkSimplePaletteColorValues(value, additionalPropertiesToCheck);\n}","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getIconUtilityClass(slot) {\n  return generateUtilityClass('MuiIcon', slot);\n}\nconst iconClasses = generateUtilityClasses('MuiIcon', ['root', 'colorPrimary', 'colorSecondary', 'colorAction', 'colorError', 'colorDisabled', 'fontSizeInherit', 'fontSizeSmall', 'fontSizeMedium', 'fontSizeLarge']);\nexport default iconClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from \"../utils/capitalize.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getIconUtilityClass } from \"./iconClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    fontSize,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', color !== 'inherit' && `color${capitalize(color)}`, `fontSize${capitalize(fontSize)}`]\n  };\n  return composeClasses(slots, getIconUtilityClass, classes);\n};\nconst IconRoot = styled('span', {\n  name: 'MuiIcon',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.color !== 'inherit' && styles[`color${capitalize(ownerState.color)}`], styles[`fontSize${capitalize(ownerState.fontSize)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  userSelect: 'none',\n  width: '1em',\n  height: '1em',\n  // Chrome fix for https://bugs.chromium.org/p/chromium/issues/detail?id=820541\n  // To remove at some point.\n  overflow: 'hidden',\n  display: 'inline-block',\n  // allow overflow hidden to take action\n  textAlign: 'center',\n  // support non-square icon\n  flexShrink: 0,\n  variants: [{\n    props: {\n      fontSize: 'inherit'\n    },\n    style: {\n      fontSize: 'inherit'\n    }\n  }, {\n    props: {\n      fontSize: 'small'\n    },\n    style: {\n      fontSize: theme.typography.pxToRem(20)\n    }\n  }, {\n    props: {\n      fontSize: 'medium'\n    },\n    style: {\n      fontSize: theme.typography.pxToRem(24)\n    }\n  }, {\n    props: {\n      fontSize: 'large'\n    },\n    style: {\n      fontSize: theme.typography.pxToRem(36)\n    }\n  }, {\n    props: {\n      color: 'action'\n    },\n    style: {\n      color: (theme.vars || theme).palette.action.active\n    }\n  }, {\n    props: {\n      color: 'disabled'\n    },\n    style: {\n      color: (theme.vars || theme).palette.action.disabled\n    }\n  }, {\n    props: {\n      color: 'inherit'\n    },\n    style: {\n      color: undefined\n    }\n  }, ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      color: (theme.vars || theme).palette[color].main\n    }\n  }))]\n})));\nconst Icon = /*#__PURE__*/React.forwardRef(function Icon(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiIcon'\n  });\n  const {\n    baseClassName = 'material-icons',\n    className,\n    color = 'inherit',\n    component: Component = 'span',\n    fontSize = 'medium',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    baseClassName,\n    color,\n    component: Component,\n    fontSize\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(IconRoot, {\n    as: Component,\n    className: clsx(baseClassName,\n    // Prevent the translation of the text content.\n    // The font relies on the exact text content to render the icon.\n    'notranslate', classes.root, className),\n    ownerState: ownerState,\n    \"aria-hidden\": true,\n    ref: ref,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Icon.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The base class applied to the icon. Defaults to 'material-icons', but can be changed to any\n   * other base class that suits the icon font you're using (for example material-icons-rounded, fas, etc).\n   * @default 'material-icons'\n   */\n  baseClassName: PropTypes.string,\n  /**\n   * The name of the icon font ligature.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'inherit'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'action', 'disabled', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\n   * @default 'medium'\n   */\n  fontSize: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'large', 'medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nif (Icon) {\n  Icon.muiName = 'Icon';\n}\nexport default Icon;","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport '../style/LoginPage.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport { Icon } from '@mui/material';\nimport logo from '../assets/images/bantay_hayop_logo.png';\nimport { useAuth } from '../context/AuthContext';\nimport LazyImage from './LazyImages';\n\nconst LoginPage = () => {\n  const { login } = useAuth();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordVisible, setPasswordVisible] = useState(false);\n  const [error, setError] = useState('');\n  const [forgotPasswordMode, setForgotPasswordMode] = useState(false);\n  const [resetMessage, setResetMessage] = useState('');\n  const [loading, setLoading] = useState(false); \n  const [resetSuccess, setResetSuccess] = useState(false); \n  const navigate = useNavigate();\n\n  // Login form submission\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    setLoading(true); \n    try {\n      const response = await axios.post(`${process.env.REACT_APP_BASE_URL}/api/admin/login`, { email, password });\n      const { token, authId, userData } = response.data; \n      login(userData, token);\n      navigate('/dashboard');\n    } catch (error) {\n      console.error('Login error:', error.response ? error.response.data : error.message);\n      setError(error.response ? error.response.data.message : 'Failed to log in');\n    } finally {\n      setLoading(false); // Stop loading\n    }\n  };\n\n  // Forgot password form submission\n  const handleForgotPassword = async (e) => {\n    e.preventDefault();\n    setLoading(true); // Start loading\n    try {\n      const response = await axios.post(`${process.env.REACT_APP_BASE_URL}/api/admin/password-reset-request-admin`, { email });\n      setResetMessage('Password reset link has been sent to your email.');\n      setResetSuccess(true); \n      setError(''); // Clear any error\n    } catch (error) {\n      console.error('Forgot password error:', error.response ? error.response.data : error.message);\n      setError(error.response ? error.response.data.message : 'Failed to send password reset link');\n    } finally {\n      setLoading(false); \n    }\n  };\n\n  return (\n    <div className=\"Body-container\">\n      <div className=\"login-container\">\n        <LazyImage src={logo} alt=\"Logo\" className=\"logo\" width={150} height={50} /> {/* Set dimensions */}\n        <h2 className=\"login-title\">{forgotPasswordMode ? 'Forgot Password' : 'Log In'}</h2>\n        <h3 className=\"login-title\">Welcome Back 👋</h3>\n\n        {error && <p className=\"error-message\">{error}</p>}\n        {resetMessage && <p className=\"success-message\">{resetMessage}</p>}\n\n        {forgotPasswordMode ? (\n          <form onSubmit={handleForgotPassword} className=\"login-form\">\n            <label className=\"input-label\" htmlFor=\"email\">Enter your email</label>\n            <input\n              id=\"email\"\n              type=\"email\"\n              placeholder=\"Enter email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              className=\"input-field\"\n              required\n              disabled={loading} \n            />\n            <button\n              type=\"submit\"\n              className=\"login-button\"\n              disabled={loading || resetSuccess} \n            >\n              {loading ? (\n                <i className=\"fas fa-spinner fa-spin\"></i> \n              ) : resetSuccess ? (\n                'Email Sent!'\n              ) : (\n                'Send Reset Link'\n              )}\n            </button>\n            <span className=\"forgot-password\" onClick={() => setForgotPasswordMode(false)}>\n              Back to Login\n            </span>\n          </form>\n        ) : (\n          <form onSubmit={handleLogin} className=\"login-form\">\n            <label className=\"input-label\" htmlFor=\"email\">Email</label>\n            <input\n              id=\"email\"\n              type=\"email\"\n              placeholder=\"Enter email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              className=\"input-field\"\n              required\n              disabled={loading} \n            />\n            <label className=\"input-label\" htmlFor=\"password\">Password</label>\n            <div className=\"password-container\">\n              <input\n                id=\"password\"\n                type={passwordVisible ? 'text' : 'password'}\n                placeholder=\"Enter password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                className=\"input-field\"\n                required\n                disabled={loading} \n              />\n              <Icon\n                type=\"button\"\n                onClick={() => setPasswordVisible(!passwordVisible)}\n                className=\"password-toggle\"\n              >\n                <i className={`fas ${passwordVisible ? 'fa-eye-slash' : 'fa-eye'}`} />\n              </Icon>\n            </div>\n            <button\n              type=\"submit\"\n              className=\"login-button\"\n              disabled={loading} \n            >\n              {loading ? <i className=\"fas fa-spinner fa-spin\"></i> : 'Log In'} \n            </button>\n            <span className=\"forgot-password\" onClick={() => setForgotPasswordMode(true)}>\n              Forgot Password?\n            </span>\n          </form>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"names":["_ref","src","alt","isVisible","setIsVisible","useState","imgRef","useRef","useEffect","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","unobserve","target","threshold","current","observe","_jsx","ref","loading","style","opacity","transition","createSimplePaletteValueFilter","additionalPropertiesToCheck","arguments","length","undefined","value","obj","main","hasCorrectMainProperty","hasOwnProperty","checkSimplePaletteColorValues","getIconUtilityClass","slot","generateUtilityClass","generateUtilityClasses","IconRoot","styled","name","overridesResolver","props","styles","ownerState","root","color","capitalize","fontSize","memoTheme","theme","userSelect","width","height","overflow","display","textAlign","flexShrink","variants","typography","pxToRem","vars","palette","action","active","disabled","Object","filter","map","_ref2","Icon","React","inProps","useDefaultProps","baseClassName","className","component","Component","other","classes","slots","composeClasses","useUtilityClasses","as","clsx","muiName","LoginPage","login","useAuth","email","setEmail","password","setPassword","passwordVisible","setPasswordVisible","error","setError","forgotPasswordMode","setForgotPasswordMode","resetMessage","setResetMessage","setLoading","resetSuccess","setResetSuccess","navigate","useNavigate","children","_jsxs","LazyImage","logo","onSubmit","async","e","preventDefault","axios","post","console","response","data","message","htmlFor","id","type","placeholder","onChange","required","onClick","token","authId","userData"],"sourceRoot":""}