{"version":3,"file":"static/js/772.ae9641b3.chunk.js","mappings":"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","sources":["components/ConfirmationModal.js","components/ReportsPage.js","components/Sidebar.js"],"sourcesContent":["import React from 'react';\nimport '../style/ConfirmationModal.css'; \n\nconst ConfirmationModal = ({ isOpen, message, onConfirm, onCancel, title = \"Confirmation\", confirmText = \"Yes\", cancelText = \"No\" }) => {\n    if (!isOpen) return null; \n\n    return (\n        <div className=\"confirmation-modal\">\n            <div className=\"modal-content\">\n                <h2>{title}</h2>\n                <p>{message}</p>\n                <div className=\"modal-buttons\">\n                    <button onClick={onConfirm} className=\"confirm-button\">{confirmText}</button>\n                    <button onClick={onCancel} className=\"cancel-button\">{cancelText}</button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ConfirmationModal;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { FaSort, FaChevronLeft, FaChevronRight } from 'react-icons/fa'; \nimport '../style/ReportsPage.css';\nimport Sidebar from './Sidebar';\n\nconst ReportsPage = () => {\n  const [reports, setReports] = useState([]);\n  const [rescuedAnimals, setRescuedAnimals] = useState([]); \n  const [falseReports, setFalseReports] = useState([]); // State for false reports\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [isRecent, setIsRecent] = useState(true);\n\n  const [currentPageReports, setCurrentPageReports] = useState(1);\n  const [itemsPerPageReports, setItemsPerPageReports] = useState(10);\n\n  const [currentPageRescued, setCurrentPageRescued] = useState(1);\n  const [itemsPerPageRescued, setItemsPerPageRescued] = useState(10);\n\n  const [currentPageFalse, setCurrentPageFalse] = useState(1); \n  const [itemsPerPageFalse, setItemsPerPageFalse] = useState(10); \n\n  const fetchReportDetails = async () => {\n    try {\n      const reportUrl = `${process.env.REACT_APP_BASE_URL}/api/admin/reportsdetails`;\n      const reportResponse = await axios.get(reportUrl);\n      setReports(reportResponse.data.reports);\n\n      const rescuedUrl = `${process.env.REACT_APP_BASE_URL}/api/admin/rescuedanimalsdetails`;\n      const rescuedResponse = await axios.get(rescuedUrl);\n      setRescuedAnimals(rescuedResponse.data);\n\n      const falseReportUrl = `${process.env.REACT_APP_BASE_URL}/api/admin/falsereports`;\n      const falseReportResponse = await axios.get(falseReportUrl);\n      setFalseReports(falseReportResponse.data.reports);\n    } catch (err) {\n      console.error('Fetch error:', err);\n      setError('Error fetching report or rescued animal details');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchReportDetails();\n  }, []);\n\n  const toggleReportOrder = () => {\n    setIsRecent(!isRecent);\n  };\n\n  const sortedReports = reports.sort((a, b) => {\n    const dateA = new Date(a.created_at);\n    const dateB = new Date(b.created_at);\n    return isRecent ? dateB - dateA : dateA - dateB;\n  });\n\n  const sortedFalseReports = falseReports.sort((a, b) => {\n    const dateA = new Date(a.created_at);\n    const dateB = new Date(b.created_at);\n    return isRecent ? dateB - dateA : dateA - dateB;\n  });\n\n  const totalPagesReports = Math.ceil(reports.length / itemsPerPageReports);\n  const totalPagesRescued = Math.ceil(rescuedAnimals.length / itemsPerPageRescued);\n  const totalPagesFalse = Math.ceil(falseReports.length / itemsPerPageFalse); // Total pages for false reports\n\n  const currentReports = sortedReports.slice(\n    (currentPageReports - 1) * itemsPerPageReports,\n    currentPageReports * itemsPerPageReports\n  );\n\n  const currentRescuedAnimals = rescuedAnimals.slice(\n    (currentPageRescued - 1) * itemsPerPageRescued,\n    currentPageRescued * itemsPerPageRescued\n  );\n\n  const currentFalseReports = sortedFalseReports.slice( // Current false reports\n    (currentPageFalse - 1) * itemsPerPageFalse,\n    currentPageFalse * itemsPerPageFalse\n  );\n\n  const handleNextReports = () => {\n    if (currentPageReports < totalPagesReports) {\n      setCurrentPageReports((prev) => prev + 1);\n    }\n  };\n\n  const handlePreviousReports = () => {\n    if (currentPageReports > 1) {\n      setCurrentPageReports((prev) => prev - 1);\n    }\n  };\n\n  const handleNextRescued = () => {\n    if (currentPageRescued < totalPagesRescued) {\n      setCurrentPageRescued((prev) => prev + 1);\n    }\n  };\n\n  const handlePreviousRescued = () => {\n    if (currentPageRescued > 1) {\n      setCurrentPageRescued((prev) => prev - 1);\n    }\n  };\n\n  const handleNextFalse = () => {\n    if (currentPageFalse < totalPagesFalse) {\n      setCurrentPageFalse((prev) => prev + 1);\n    }\n  };\n\n  const handlePreviousFalse = () => {\n    if (currentPageFalse > 1) {\n      setCurrentPageFalse((prev) => prev - 1);\n    }\n  };\n\n  if (loading) {\n    return <p>Loading reports and rescued animals...</p>;\n  }\n\n  if (error) {\n    return <p>{error}</p>;\n  }\n\n  return (\n    <div className=\"report-details-container\">\n      <Sidebar />\n      <h1>Report Details</h1>\n      <table className=\"report-details-table\">\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Reporter</th>\n            <th>Animal Type</th>\n            <th>Details</th>\n            <th>Cruelty Details</th>\n            <th>\n              <span>Date Created</span>\n              <button onClick={toggleReportOrder} className=\"toggle-button\">\n                <FaSort />\n              </button>\n            </th>\n            <th>Accident Date</th>\n            <th>Status</th>\n            <th>Image</th>\n          </tr>\n        </thead>\n        <tbody>\n          {currentReports.length === 0 ? (\n            <tr>\n              <td colSpan=\"9\">No reports available.</td>\n            </tr>\n          ) : (\n            currentReports.map((report) => (\n              <tr key={report.id}>\n                <td>{report.id}</td>\n                <td>{report.reporter_name}</td>\n                <td>{report.animal_type}</td>\n                <td>{report.animal_details}</td>\n                <td>{report.cruelty_details}</td>\n                <td>{new Date(report.created_at).toLocaleDateString()}</td>\n                <td>{new Date(report.accident_date).toLocaleDateString()}</td>\n                <td>{report.status}</td>\n                <td>\n                  {report.image_url && (\n                    <img src={report.image_url} alt=\"Report\" className=\"report-image\" />\n                  )}\n                </td>\n              </tr>\n            ))\n          )}\n        </tbody>\n      </table>\n\n      <div className=\"pagination\">\n        <button onClick={handlePreviousReports} disabled={currentPageReports === 1}>\n          <FaChevronLeft />\n        </button>\n        <span>\n          Page {currentPageReports} of {totalPagesReports}\n        </span>\n        <button onClick={handleNextReports} disabled={currentPageReports === totalPagesReports}>\n          <FaChevronRight />\n        </button>\n      </div>\n\n      <h1>Rescued Animals</h1>\n      <table className=\"report-details-table\">\n        <thead>\n          <tr>\n            <th>Image</th>\n            <th>Report ID</th>\n            <th>Rescuer</th>\n            <th>Animal Type</th>\n            <th>Number of Animals</th>\n            <th>Accident Date</th>\n            <th>Rescue Date</th>\n            <th>Animal Condition</th>\n            <th>Phone Number</th>\n          </tr>\n        </thead>\n        <tbody>\n          {currentRescuedAnimals.length === 0 ? (\n            <tr>\n              <td colSpan=\"9\">No rescued animals available.</td>\n            </tr>\n          ) : (\n            currentRescuedAnimals.map((rescued) => (\n              <tr key={rescued.id}>\n                <td>\n                  {rescued.image_url && (\n                    <img src={rescued.image_url} alt=\"Rescued Animal\" className=\"report-image\" />\n                  )}\n                </td>\n                <td>{rescued.rescued_report_id}</td>\n                <td>{rescued.full_name}</td>\n                <td>{rescued.animal_type}</td>\n                <td>{rescued.number_of_animals}</td>\n                <td>{new Date(rescued.accident_date).toLocaleDateString()}</td>\n                <td>{new Date(rescued.rescue_date).toLocaleDateString()}</td>\n                <td>{rescued.animal_condition}</td>\n                <td>{rescued.phone_number}</td> \n              </tr>\n            ))\n          )}\n        </tbody>\n      </table>\n\n      <div className=\"pagination\">\n        <button onClick={handlePreviousRescued} disabled={currentPageRescued === 1}>\n          <FaChevronLeft />\n        </button>\n        <span>\n          Page {currentPageRescued} of {totalPagesRescued}\n        </span>\n        <button onClick={handleNextRescued} disabled={currentPageRescued === totalPagesRescued}>\n          <FaChevronRight />\n        </button>\n      </div>\n\n      <h1>False Reports</h1> {/* New section for false reports */}\n      <table className=\"report-details-table\">\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Reporter</th>\n            <th>Animal Type</th>\n            <th>Details</th>\n            <th>Cruelty Details</th>\n            <th>Date Created</th>\n            <th>Accident Date</th>\n            <th>Status</th>\n            <th>Image</th>\n          </tr>\n        </thead>\n        <tbody>\n          {currentFalseReports.length === 0 ? (\n            <tr>\n              <td colSpan=\"9\">No false reports available.</td>\n            </tr>\n          ) : (\n            currentFalseReports.map((report) => (\n              <tr key={report.id}>\n                <td>{report.id}</td>\n                <td>{report.reporter_name}</td>\n                <td>{report.animal_type}</td>\n                <td>{report.animal_details}</td>\n                <td>{report.cruelty_details}</td>\n                <td>{new Date(report.created_at).toLocaleDateString()}</td>\n                <td>{new Date(report.accident_date).toLocaleDateString()}</td>\n                <td>{report.status}</td>\n                <td>\n                  {report.image_url && (\n                    <img src={report.image_url} alt=\"Report\" className=\"report-image\" />\n                  )}\n                </td>\n              </tr>\n            ))\n          )}\n        </tbody>\n      </table>\n\n      <div className=\"pagination\">\n        <button onClick={handlePreviousFalse} disabled={currentPageFalse === 1}>\n          <FaChevronLeft />\n        </button>\n        <span>\n          Page {currentPageFalse} of {totalPagesFalse}\n        </span>\n        <button onClick={handleNextFalse} disabled={currentPageFalse === totalPagesFalse}>\n          <FaChevronRight />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ReportsPage;","import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom'; \nimport { FaTachometerAlt, FaFileAlt, FaHeart, FaPaw, FaCogs, FaCalendarAlt, FaUsers, FaSignOutAlt, FaMap } from 'react-icons/fa'; \n\nimport '../style/Sidebar.css';\nimport ConfirmationModal from './ConfirmationModal'; \nimport { useAuth } from '../context/AuthContext'; \n\nconst Sidebar = () => {\n  const { logout } = useAuth(); \n  const [isModalOpen, setModalOpen] = useState(false);\n  const navigate = useNavigate();\n\n  const handleLogoutClick = () => {\n    setModalOpen(true); \n  };\n\n  const confirmLogout = () => {\n    logout(); \n    navigate('/'); \n    alert(\"Successfully logged out!\"); \n  };\n\n  const cancelLogout = () => {\n    setModalOpen(false);\n  };\n\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar-header\">\n        <h2>Admin</h2>\n      </div>\n      <ul className=\"sidebar-list\">\n        <li>\n          <Link to=\"/dashboard\" className=\"sidebar-link\">\n            <FaTachometerAlt className=\"sidebar-icon\" /> Dashboard\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/reports\" className=\"sidebar-link\">\n            <FaFileAlt className=\"sidebar-icon\" /> Reports\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/adopt-animal\" className=\"sidebar-link\">\n            <FaHeart className=\"sidebar-icon\" /> Adoptions\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/animals\" className=\"sidebar-link\">\n            <FaPaw className=\"sidebar-icon\" /> Animals\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/events\" className=\"sidebar-link\">\n            <FaCalendarAlt className=\"sidebar-icon\" /> Events\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/rescuers\" className=\"sidebar-link\">\n            <FaUsers className=\"sidebar-icon\" /> Rescuers\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/maps\" className=\"sidebar-link\"> \n            <FaMap className=\"sidebar-icon\" /> Map\n          </Link>\n        </li>\n      </ul>\n      <div className=\"sidebar-footer\">\n        <button onClick={handleLogoutClick} className=\"sidebar-link logout-button\">\n          <FaSignOutAlt className=\"sidebar-icon\" /> Logout\n        </button>\n      </div>\n\n     \n      <ConfirmationModal\n        isOpen={isModalOpen}\n        message=\"Are you sure you want to log out?\"\n        onConfirm={confirmLogout}\n        onCancel={cancelLogout}\n      />\n    </div>\n  );\n};\n\nexport default Sidebar;\n"],"names":["_ref","isOpen","message","onConfirm","onCancel","title","confirmText","cancelText","_jsx","className","children","_jsxs","onClick","ReportsPage","reports","setReports","useState","rescuedAnimals","setRescuedAnimals","falseReports","setFalseReports","loading","setLoading","error","setError","isRecent","setIsRecent","currentPageReports","setCurrentPageReports","itemsPerPageReports","setItemsPerPageReports","currentPageRescued","setCurrentPageRescued","itemsPerPageRescued","setItemsPerPageRescued","currentPageFalse","setCurrentPageFalse","itemsPerPageFalse","setItemsPerPageFalse","useEffect","async","reportUrl","reportResponse","axios","get","data","rescuedUrl","rescuedResponse","falseReportUrl","falseReportResponse","err","console","fetchReportDetails","sortedReports","sort","a","b","dateA","Date","created_at","dateB","sortedFalseReports","totalPagesReports","Math","ceil","length","totalPagesRescued","totalPagesFalse","currentReports","slice","currentRescuedAnimals","currentFalseReports","Sidebar","toggleReportOrder","FaSort","colSpan","map","report","id","reporter_name","animal_type","animal_details","cruelty_details","toLocaleDateString","accident_date","status","image_url","src","alt","handlePreviousReports","prev","disabled","FaChevronLeft","handleNextReports","FaChevronRight","rescued","rescued_report_id","full_name","number_of_animals","rescue_date","animal_condition","phone_number","handlePreviousRescued","handleNextRescued","handlePreviousFalse","handleNextFalse","logout","useAuth","isModalOpen","setModalOpen","navigate","useNavigate","Link","to","FaTachometerAlt","FaFileAlt","FaHeart","FaPaw","FaCalendarAlt","FaUsers","FaMap","handleLogoutClick","FaSignOutAlt","ConfirmationModal","confirmLogout","alert","cancelLogout"],"sourceRoot":""}