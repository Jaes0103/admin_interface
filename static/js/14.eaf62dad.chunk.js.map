{"version":3,"file":"static/js/14.eaf62dad.chunk.js","mappings":"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","sources":["webpack://admin_interface/./src/style/ErrorModal.css?b222","components/ApproveRequestModal.js","components/AdoptableAnimalPage.js","components/ConfirmationModal.js","components/Sidebar.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import React from 'react';\r\nimport '../style/ApproveRequestModal.css'; // CSS file for modal styling\r\n\r\nconst ApproveRequestModal = ({ isOpen, onClose, onApprove, adoptionFee, setAdoptionFee }) => {\r\n    if (!isOpen) return null;\r\n\r\n    return (\r\n        <>\r\n            {/* Backdrop overlay */}\r\n            <div className=\"modal-backdrop\" onClick={onClose}></div>\r\n\r\n            {/* Modal content */}\r\n            <div className=\"modal\">\r\n                <div className=\"modal-content\">\r\n                    <h3>Approve Adoption Request</h3>\r\n                    <label>\r\n                        Adoption Fee:\r\n                        <input\r\n                            type=\"number\"\r\n                            value={adoptionFee}\r\n                            onChange={(e) => setAdoptionFee(e.target.value)}\r\n                            placeholder=\"Enter adoption fee\"\r\n                        />\r\n                    </label>\r\n                    <div className=\"modal-actions\">\r\n                        <button className=\"modal-approve-button\" onClick={() => onApprove(adoptionFee)}>\r\n                            Approve\r\n                        </button>\r\n                        <button className=\"modal-cancel-button\" onClick={onClose}>\r\n                            Cancel\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ApproveRequestModal;\r\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport '../style/AdoptableAnimalsPage.css';\nimport { FaEdit, FaTrash, FaChevronLeft, FaChevronRight } from 'react-icons/fa';\nimport ConfirmationModal from './ConfirmationModal';\nimport Sidebar from './Sidebar';\nimport ErrorModal from '../style/ErrorModal.css';\nimport ApproveRequestModal from './ApproveRequestModal';\n\n\nconst AdoptableAnimalsPage = () => {\n    const [adoptableAnimals, setAdoptableAnimals] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState('');\n    const [isModalOpen, setModalOpen] = useState(false);\n    const [editMode, setEditMode] = useState(false);\n    const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n    const [animalToDelete, setAnimalToDelete] = useState(null);\n    const [deleteMessage, setDeleteMessage] = useState('');\n    const [adoptionRequestToDelete, setAdoptionRequestToDelete] = useState(null);\n    const [isErrorModalOpen, setIsErrorModalOpen] = useState(false);\n    const [success, setSuccess] = useState(null);\n    const [errorMessage, setErrorMessage] = useState('');\n    const [selectedRequestId, setSelectedRequestId] = useState(null);\n    const [requestId, setRequestId] = useState(null);\n    const [setIsModalOpen] = useState(false);\n    const [adoptionRequests, setAdoptionRequests] = useState([]);\n    const [isUpdateModalOpen, setIsUpdateModalOpen] = useState(false);\n    const [isApproveModalOpen, setIsApproveModalOpen] = useState(false); // Modal state for approval\n    const [requestToApprove, setRequestToApprove] = useState(null); // Track the request being approved\n    const [adoptionFee, setAdoptionFee] = useState(''); \n    const [newAnimal, setNewAnimal] = useState({\n        id: null,\n        name: '',\n        type: '',\n        breed: '',\n        age: '',\n        size: '',\n        personality: '',\n        health_status: '',\n        background: '',\n        special_needs: '',\n        shelter: '',\n        img: null,\n        imgurl: '',\n    });\n    const [updatingRequestId, setUpdatingRequestId] = useState(null);\n    const [newStatus, setNewStatus] = useState('');\n    const [newLocation, setNewLocation] = useState('');\n    const [currentPage, setCurrentPage] = useState(1);\n    const itemsPerPage = 5; \n    const fetchAdoptableAnimals = async () => {\n        try {\n            const url = `${process.env.REACT_APP_BASE_URL}/api/admin/adoptable-animals`;\n            const response = await axios.get(url);\n            setAdoptableAnimals(response.data.animals);\n        } catch (err) {\n            console.error('Fetch error:', err);\n            setError('Error fetching adoptable animals');\n        } finally {\n            setLoading(false);\n        }\n    };\n    const fetchAdoptionRequests = async () => {\n        try {\n            const url = `${process.env.REACT_APP_BASE_URL}/api/admin/adoption-requests`;\n            const response = await axios.get(url);\n            console.log('Fetched adoption requests:', response.data.adoptionRequests);\n            setAdoptionRequests(response.data.adoptionRequests);\n        } catch (err) {\n            console.error('Error fetching adoption requests:', err);\n            setError('Error fetching adoption requests');\n        } finally {\n            setLoading(false);\n        }\n    };\n    \n    const handleApproveRequest = (request) => {\n        console.log('Request to approve:', request); // Should log the full request object\n        setRequestToApprove(request);\n        setAdoptionFee('');\n        setIsApproveModalOpen(true);\n    };\n    \n    const handleApprove = async (fee) => {\n        console.log('Approving request ID:', requestToApprove?.id); // Check ID here\n        if (!requestToApprove || !requestToApprove.id) {\n            console.error('No request to approve or request ID is missing');\n            return;\n        }\n    \n        try {\n            console.log(`Sending PUT request to: /api/admin/adoption_requests/${requestToApprove.id}`);\n            const response = await axios.put(`${process.env.REACT_APP_BASE_URL}/api/admin/adoption-requests/${requestToApprove.id}`, {\n                adoption_fee: parseFloat(fee), // Send only the adoption fee to the backend\n            });\n            console.log('Approval response:', response.data); // Log the response\n        } catch (error) {\n            console.error('Error approving request:', error);\n        } finally {\n            setIsApproveModalOpen(false);\n            setRequestToApprove(null);\n            setAdoptionFee('');\n        }\n    };\n    \n    useEffect(() => {\n        fetchAdoptableAnimals();\n        fetchAdoptionRequests();\n    }, []);\n    const handleAnimalChange = (e) => {\n        const { name, value } = e.target;\n        setNewAnimal({ ...newAnimal, [name]: value });\n    };\n\n    const handleImageChange = (e) => {\n        setNewAnimal({ ...newAnimal, img: e.target.files[0] });\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const formData = new FormData();\n        Object.keys(newAnimal).forEach((key) => {\n            formData.append(key, newAnimal[key]);\n        });\n\n        try {\n            const url = editMode\n                ? `${process.env.REACT_APP_BASE_URL}/api/admin/update-adoptable-animal/${newAnimal.id}`\n                : `${process.env.REACT_APP_BASE_URL}/api/admin/add-adoptable-animal`;\n            const method = editMode ? 'put' : 'post';\n            const response = await axios[method](url, formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n            });\n\n            const updatedAnimal = response.data;\n\n            if (editMode) {\n                setAdoptableAnimals((prev) =>\n                    prev.map((animal) => (animal.id === updatedAnimal.id ? updatedAnimal : animal))\n                );\n            } else {\n                setAdoptableAnimals((prev) => [...prev, updatedAnimal]);\n            }\n\n            resetForm();\n            setModalOpen(false);\n            setCurrentPage(1);\n\n        } catch (err) {\n            console.error('Error adding/updating animal:', err);\n            setError(editMode ? 'Error updating animal' : 'Error adding animal');\n        }\n    };\n\n    const handleEdit = (animal) => {\n        setNewAnimal({ ...animal, img: null });\n        setEditMode(true);\n        setModalOpen(true);\n    };\n    const handleDeleteAdoptionRequest = (requestId) => {\n        setAdoptionRequestToDelete(requestId);\n        setDeleteMessage('Are you sure you want to delete this adoption request? This action cannot be undone.');\n        setIsDeleteModalOpen(true); \n    };\n    const handleDelete = (animalId) => {\n        console.log('Deleting animal with ID:', animalId);\n        setAnimalToDelete(animalId);\n        setDeleteMessage('Are you sure you want to delete this animal? This action cannot be undone.');\n        setIsDeleteModalOpen(true); \n    };\n\n    const confirmDelete = async () => {\n        console.log('Confirmed deletion for animal ID:', animalToDelete); \n        if (animalToDelete) {\n            const url = `${process.env.REACT_APP_BASE_URL}/api/admin/delete-adoptable-animal/${animalToDelete}`;\n            try {\n                const response = await axios.delete(url);\n                console.log('Delete response:', response.data); \n\n                if (response.status === 200) {\n                    setAdoptableAnimals((prev) => prev.filter((animal) => animal.id !== animalToDelete));\n                    setIsDeleteModalOpen(false);\n                    setAnimalToDelete(null); \n                    setSuccess('Animal deleted successfully'); \n                } else {\n                    setError(response.data.error || 'Error deleting animal'); \n                }\n            } catch (error) {\n                console.error('Error confirming delete:', error);\n                if (error.response) {\n                    setError(error.response.data.error || 'Error deleting animal');\n                } else {\n                    setError('Network error or server did not respond');\n                }\n            }\n        }\n    };\n\n    const cancelDelete = () => {\n        setIsDeleteModalOpen(false);\n        setAnimalToDelete(null); \n        setError(null); \n        setSuccess(null); \n    };\n\n    const closeErrorModal = () => {\n        setIsErrorModalOpen(false); \n        setErrorMessage(''); \n    };\n    const resetForm = () => {\n        setNewAnimal({\n            id: null,\n            name: '',\n            type: '',\n            breed: '',\n            age: '',\n            size: '',\n            personality: '',\n            health_status: '',\n            background: '',\n            special_needs: '',\n            shelter: '',\n            img: null,\n            imgurl: '',\n        });\n        setEditMode(false);\n    };\n\n    const toggleModal = () => {\n        resetForm();\n        setModalOpen(!isModalOpen);\n    };\n\n    const totalPages = Math.ceil(adoptableAnimals.length / itemsPerPage);\n    const displayedAnimals = adoptableAnimals.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage);\n\n    const handleNextPage = () => {\n        if (currentPage < totalPages) {\n            setCurrentPage((prev) => prev + 1);\n        }\n    };\n\n    const handlePrevPage = () => {\n        if (currentPage > 1) {\n            setCurrentPage((prev) => prev - 1);\n        }\n    };\n\n    \n    if (loading) {\n        return <p>Loading adoptable animals...</p>;\n    }\n\n    if (error) {\n        return <p>{error}</p>;\n    }\n\n    return (\n        <div className=\"adoptable-animals-container\">\n            <Sidebar />\n            <div className='container'>\n                <h1>Adoptable Animals</h1>\n                <button className='add-animal-button' onClick={toggleModal}>Add Adoptable Animal</button>\n            </div>\n            {isModalOpen && (\n                <div className=\"dialog-overlay\">\n                    <div className=\"dialog-box\">\n                        <span className=\"close\" onClick={toggleModal}>\n                            &times;\n                        </span>\n                        <h4>{editMode ? 'Edit Adoptable Animal' : 'Add Adoptable Animal'}</h4>\n                        <form onSubmit={handleSubmit}>\n                            <div className=\"form-grid\">\n                                <div className=\"form-group\">\n                                    <label>Name:</label>\n                                    <input\n                                        type=\"text\"\n                                        name=\"name\"\n                                        value={newAnimal.name}\n                                        onChange={handleAnimalChange}\n                                        required\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Type:</label>\n                                    <input\n                                        type=\"text\"\n                                        name=\"type\"\n                                        value={newAnimal.type}\n                                        onChange={handleAnimalChange}\n                                        required\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Breed:</label>\n                                    <input\n                                        type=\"text\"\n                                        name=\"breed\"\n                                        value={newAnimal.breed}\n                                        onChange={handleAnimalChange}\n                                        required\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Age:</label>\n                                    <input\n                                        type=\"text\"\n                                        name=\"age\"\n                                        value={newAnimal.age}\n                                        onChange={handleAnimalChange}\n                                        required\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Size:</label>\n                                    <input\n                                        type=\"text\"\n                                        name=\"size\"\n                                        value={newAnimal.size}\n                                        onChange={handleAnimalChange}\n                                        required\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Personality:</label>\n                                    <input\n                                        type=\"text\"\n                                        name=\"personality\"\n                                        value={newAnimal.personality}\n                                        onChange={handleAnimalChange}\n                                        required\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Health Status:</label>\n                                    <input\n                                        type=\"text\"\n                                        name=\"health_status\"\n                                        value={newAnimal.health_status}\n                                        onChange={handleAnimalChange}\n                                        required\n                                    />\n                                </div>\n                                \n                                <div className=\"form-group\">\n                                    <label>Shelter:</label>\n                                    <input\n                                        type=\"text\"\n                                        name=\"shelter\"\n                                        value={newAnimal.shelter}\n                                        onChange={handleAnimalChange}\n                                        required\n                                    />\n                                </div>\n                            </div>\n\n                            {/* Image display section */}\n                            {newAnimal.imgurl && (\n                                <div className=\"form-group\">\n                                    <label>Current Image:</label>\n                                    <img\n                                        src={newAnimal.imgurl}\n                                        alt={newAnimal.name}\n                                        style={{ width: '100px', height: 'auto' }}\n                                    />\n                                </div>\n                            )}\n                            \n                            {/* Image upload section */}\n                            <div className=\"form-group\">\n                                <label>Image:</label>\n                                <input\n                                    type=\"file\"\n                                    name=\"img\"\n                                    accept=\"image/*\"\n                                    onChange={handleImageChange}\n                                    required={!editMode}\n                                />\n                            </div>\n\n                            {/* Special Needs and Shelter fields */}\n                            <div className=\"form-group\">\n                                <label>Special Needs:</label>\n                                <input\n                                    type=\"text\"\n                                    name=\"special_needs\"\n                                    value={newAnimal.special_needs}\n                                    onChange={handleAnimalChange}\n                                    required\n                                />\n                            </div>\n                            {/* Background field moved here */}\n                            <div className=\"form-group\">\n                                <label>Background:</label>\n                                <input\n                                    type=\"text\"\n                                    name=\"background\"\n                                    value={newAnimal.background}\n                                    onChange={handleAnimalChange}\n                                    required\n                                />\n                            </div>\n                            <button type=\"submit\">\n                                {editMode ? 'Update Animal' : 'Add Animal'}\n                            </button>\n                            <button type=\"button\" onClick={toggleModal}>\n                                Cancel\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            )}\n            {isDeleteModalOpen && (\n                <ConfirmationModal\n                    isOpen={isDeleteModalOpen}\n                    message={deleteMessage}\n                    onConfirm={confirmDelete}\n                    onCancel={cancelDelete}\n                    title=\"Confirm Deletion\"\n                />\n            )}\n\n            {isErrorModalOpen && (\n                <ErrorModal\n                    isOpen={isErrorModalOpen}\n                    message={errorMessage}\n                    onClose={closeErrorModal}\n                />\n            )}\n            {adoptableAnimals.length === 0 ? (\n                <p>No adoptable animals available.</p>\n            ) : (\n                <>\n                    <table className=\"adoptable-animals-table\">\n                        <thead>\n                            <tr>\n                                <th>ID</th>\n                                <th>Name</th>\n                                <th>Type</th>\n                                <th>Breed</th>\n                                <th>Age</th>\n                                <th>Size</th>\n                                <th>Personality</th>\n                                <th>Health Status</th>\n                                <th>Background</th>\n                                <th>Special Needs</th>\n                                <th>Shelter</th>\n                                <th>Image</th>\n                                <th>Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {displayedAnimals.map((animal) => (\n                                <tr key={animal.id}>\n                                    <td>{animal.id}</td>\n                                    <td>{animal.name}</td>\n                                    <td>{animal.type}</td>\n                                    <td>{animal.breed}</td>\n                                    <td>{animal.age}</td>\n                                    <td>{animal.size}</td>\n                                    <td>{animal.personality}</td>\n                                    <td>{animal.health_status}</td>\n                                    <td>{animal.background}</td>\n                                    <td>{animal.special_needs}</td>\n                                    <td>{animal.shelter}</td>\n                                    <td>\n                                        <img\n                                            src={animal.imgurl}\n                                            alt={animal.name}\n                                            style={{ width: '100px', height: 'auto' }}\n                                        />\n                                    </td>\n                                    <td>\n                                        <button onClick={() => handleEdit(animal)}>\n                                            <FaEdit />\n                                        </button>\n                                        <button onClick={() => handleDelete(animal.id)}>\n                                            <FaTrash />\n                                        </button>\n                                        {animal.adoptionRequests && animal.adoptionRequests.map(request => (\n                                            <div key={request.id}>\n                                                <button onClick={() => handleDeleteAdoptionRequest(request.id)}>\n                                                    Delete Request\n                                                </button>\n                                            </div>\n                                        ))}\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>    \n                    <div className=\"pagination\">\n                        <button onClick={handlePrevPage} disabled={currentPage === 1}>\n                            <FaChevronLeft />\n                        </button>\n                        <span>Page {currentPage} of {totalPages}</span>\n                        <button onClick={handleNextPage} disabled={currentPage === totalPages}>\n                            <FaChevronRight />\n                        </button>\n                    </div>\n                </>\n            )}\n            <div className=\"table-container\">\n                <h2>Adoption Requests</h2>\n                <table className=\"adoptable-animals-table\">\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Contact Number</th>\n                            <th>Animal Name</th>\n                            <th>Status</th>\n                            <th>Adopt Fee</th>\n                            <th>Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {adoptionRequests.length > 0 ? (\n                            adoptionRequests.map((request) => (\n                                <tr key={request.id}>\n                                    <td>{request.reporter_name}</td>\n                                    <td>{request.phone_number}</td>\n                                    <td>{request.name}</td>\n                                    <td>{request.status}</td>\n                                    <td>{request.adoption_fee}</td>\n                                    <td>\n                                        <button className=\"approve-button\" onClick={() => handleApproveRequest(request)}>\n                                            Approve\n                                        </button>\n                                    </td>\n                                </tr>\n                            ))\n                        ) : (\n                            <tr>\n                                <td colSpan=\"6\">No adoption requests found.</td>\n                            </tr>\n                        )}\n                    </tbody>\n\n                </table>\n            </div>\n\n            <ApproveRequestModal\n                isOpen={isApproveModalOpen}\n                onClose={() => setIsApproveModalOpen(false)}\n                onApprove={handleApprove}\n                adoptionFee={adoptionFee}\n                setAdoptionFee={setAdoptionFee}\n            />\n        </div>\n    );\n};\n\nexport default AdoptableAnimalsPage;\n","import React from 'react';\nimport '../style/ConfirmationModal.css'; \n\nconst ConfirmationModal = ({ isOpen, message, onConfirm, onCancel, title = \"Confirmation\", confirmText = \"Yes\", cancelText = \"No\" }) => {\n    if (!isOpen) return null; \n\n    return (\n        <div className=\"confirmation-modal\">\n            <div className=\"modal-content\">\n                <h2>{title}</h2>\n                <p>{message}</p>\n                <div className=\"modal-buttons\">\n                    <button onClick={onConfirm} className=\"confirm-button\">{confirmText}</button>\n                    <button onClick={onCancel} className=\"cancel-button\">{cancelText}</button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ConfirmationModal;\n","import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom'; \nimport { FaTachometerAlt, FaFileAlt, FaHeart, FaPaw, FaCogs, FaCalendarAlt, FaUsers, FaSignOutAlt, FaMap } from 'react-icons/fa'; \n\nimport '../style/Sidebar.css';\nimport ConfirmationModal from './ConfirmationModal'; \nimport { useAuth } from '../context/AuthContext'; \n\nconst Sidebar = () => {\n  const { logout } = useAuth(); \n  const [isModalOpen, setModalOpen] = useState(false);\n  const navigate = useNavigate();\n\n  const handleLogoutClick = () => {\n    setModalOpen(true); \n  };\n\n  const confirmLogout = () => {\n    logout(); \n    navigate('/'); \n    alert(\"Successfully logged out!\"); \n  };\n\n  const cancelLogout = () => {\n    setModalOpen(false);\n  };\n\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar-header\">\n        <h2>Admin</h2>\n      </div>\n      <ul className=\"sidebar-list\">\n        <li>\n          <Link to=\"/dashboard\" className=\"sidebar-link\">\n            <FaTachometerAlt className=\"sidebar-icon\" /> Dashboard\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/reports\" className=\"sidebar-link\">\n            <FaFileAlt className=\"sidebar-icon\" /> Reports\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/adopt-animal\" className=\"sidebar-link\">\n            <FaHeart className=\"sidebar-icon\" /> Adoptions\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/animals\" className=\"sidebar-link\">\n            <FaPaw className=\"sidebar-icon\" /> Animals\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/events\" className=\"sidebar-link\">\n            <FaCalendarAlt className=\"sidebar-icon\" /> Events\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/rescuers\" className=\"sidebar-link\">\n            <FaUsers className=\"sidebar-icon\" /> Rescuers\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/maps\" className=\"sidebar-link\"> \n            <FaMap className=\"sidebar-icon\" /> Map\n          </Link>\n        </li>\n      </ul>\n      <div className=\"sidebar-footer\">\n        <button onClick={handleLogoutClick} className=\"sidebar-link logout-button\">\n          <FaSignOutAlt className=\"sidebar-icon\" /> Logout\n        </button>\n      </div>\n\n     \n      <ConfirmationModal\n        isOpen={isModalOpen}\n        message=\"Are you sure you want to log out?\"\n        onConfirm={confirmLogout}\n        onCancel={cancelLogout}\n      />\n    </div>\n  );\n};\n\nexport default Sidebar;\n"],"names":["_ref","isOpen","onClose","onApprove","adoptionFee","setAdoptionFee","_jsxs","_Fragment","children","_jsx","className","onClick","type","value","onChange","e","target","placeholder","AdoptableAnimalsPage","adoptableAnimals","setAdoptableAnimals","useState","loading","setLoading","error","setError","isModalOpen","setModalOpen","editMode","setEditMode","isDeleteModalOpen","setIsDeleteModalOpen","animalToDelete","setAnimalToDelete","deleteMessage","setDeleteMessage","adoptionRequestToDelete","setAdoptionRequestToDelete","isErrorModalOpen","setIsErrorModalOpen","success","setSuccess","errorMessage","setErrorMessage","selectedRequestId","setSelectedRequestId","requestId","setRequestId","setIsModalOpen","adoptionRequests","setAdoptionRequests","isUpdateModalOpen","setIsUpdateModalOpen","isApproveModalOpen","setIsApproveModalOpen","requestToApprove","setRequestToApprove","newAnimal","setNewAnimal","id","name","breed","age","size","personality","health_status","background","special_needs","shelter","img","imgurl","updatingRequestId","setUpdatingRequestId","newStatus","setNewStatus","newLocation","setNewLocation","currentPage","setCurrentPage","useEffect","async","url","response","axios","get","data","animals","err","console","fetchAdoptableAnimals","log","fetchAdoptionRequests","handleAnimalChange","resetForm","toggleModal","totalPages","Math","ceil","length","displayedAnimals","slice","Sidebar","onSubmit","preventDefault","formData","FormData","Object","keys","forEach","key","append","method","updatedAnimal","headers","prev","map","animal","required","src","alt","style","width","height","accept","files","ConfirmationModal","message","onConfirm","delete","status","filter","onCancel","cancelDelete","title","ErrorModal","closeErrorModal","handleEdit","FaEdit","handleDelete","animalId","FaTrash","request","handleDeleteAdoptionRequest","handlePrevPage","disabled","FaChevronLeft","handleNextPage","FaChevronRight","reporter_name","phone_number","adoption_fee","handleApproveRequest","colSpan","ApproveRequestModal","put","parseFloat","fee","confirmText","cancelText","logout","useAuth","navigate","useNavigate","Link","to","FaTachometerAlt","FaFileAlt","FaHeart","FaPaw","FaCalendarAlt","FaUsers","FaMap","handleLogoutClick","FaSignOutAlt","confirmLogout","alert","cancelLogout"],"sourceRoot":""}