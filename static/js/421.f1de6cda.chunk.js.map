{"version":3,"file":"static/js/421.f1de6cda.chunk.js","mappings":"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","sources":["components/ConfirmationModal.js","components/EventsManager.js","components/Sidebar.js"],"sourcesContent":["import React from 'react';\nimport '../style/ConfirmationModal.css'; \n\nconst ConfirmationModal = ({ isOpen, message, onConfirm, onCancel, title = \"Confirmation\", confirmText = \"Yes\", cancelText = \"No\" }) => {\n    if (!isOpen) return null; \n\n    return (\n        <div className=\"confirmation-modal\">\n            <div className=\"modal-content\">\n                <h2>{title}</h2>\n                <p>{message}</p>\n                <div className=\"modal-buttons\">\n                    <button onClick={onConfirm} className=\"confirm-button\">{confirmText}</button>\n                    <button onClick={onCancel} className=\"cancel-button\">{cancelText}</button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ConfirmationModal;\n","import React, { useState, useEffect } from 'react';\nimport '../style/EventsManager.css';\nimport Sidebar from './Sidebar';\n\nconst EventManager = () => {\n    const [events, setEvents] = useState([]);\n    const [isFormVisible, setFormVisible] = useState(false);\n    const [eventDetails, setEventDetails] = useState({\n        event_name: '',\n        event_date: '',\n        imgFile: null,\n        vidFile: null,\n        password: '', \n    });\n    const [loading, setLoading] = useState(false); \n    const [error, setError] = useState(''); \n    const [successMessage, setSuccessMessage] = useState(''); \n    const [passwordStrength, setPasswordStrength] = useState(''); \n\n    useEffect(() => {\n        fetchEvents(); \n    }, []);\n\n    const fetchEvents = async () => {\n        setLoading(true); \n        try {\n            const response = await fetch(`${process.env.REACT_APP_BASE_URL}/api/admin/events`);\n            if (!response.ok) {\n                throw new Error(`Failed to fetch events: ${response.status}`);\n            }\n            const data = await response.json();\n            console.log('Fetched Events:', data);\n            setEvents(data);\n        } catch (error) {\n            console.error('Error fetching events:', error);\n            setError('Error fetching events. Please try again later.');\n        } finally {\n            setLoading(false); \n        }\n    };\n\n    const handleChange = (e) => {\n        const { name, value, files } = e.target;\n        if (files) {\n            setEventDetails({ ...eventDetails, [name]: files[0] });\n        } else {\n            setEventDetails({ ...eventDetails, [name]: value });\n            if (name === 'password') {\n                evaluatePasswordStrength(value);\n            }\n        }\n    };\n\n    const evaluatePasswordStrength = (password) => {\n        let strength = '';\n        if (password.length < 6) {\n            strength = 'Too short';\n        } else if (password.length < 10) {\n            strength = 'Weak';\n        } else if (password.match(/[A-Z]/) && password.match(/[0-9]/)) {\n            strength = 'Strong';\n        } else {\n            strength = 'Medium';\n        }\n        setPasswordStrength(strength);\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const formData = new FormData();\n\n        formData.append('event_name', eventDetails.event_name);\n        formData.append('event_date', eventDetails.event_date);\n        if (eventDetails.imgFile) {\n            formData.append('imgFile', eventDetails.imgFile);\n        }\n        if (eventDetails.vidFile) {\n            formData.append('vidFile', eventDetails.vidFile);\n        }\n\n        setLoading(true);\n        setError(''); \n        setSuccessMessage(''); \n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BASE_URL}/api/admin/create-events`, {\n                method: 'POST',\n                body: formData,\n            });\n\n            if (!response.ok) {\n                const errorText = await response.text();\n                throw new Error(`Failed to create event: ${response.status} ${errorText}`);\n            }\n\n            setSuccessMessage('Event created successfully!'); \n            fetchEvents(); \n            setEventDetails({ event_name: '', event_date: '', imgFile: null, vidFile: null, password: '' }); \n            setFormVisible(false);\n        } catch (error) {\n            console.error('Error during event submission:', error);\n            setError('Error creating event. Please try again later.');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const toggleFormVisibility = () => {\n        setFormVisible(!isFormVisible);\n        if (isFormVisible) {\n            setEventDetails({ event_name: '', event_date: '', imgFile: null, vidFile: null, password: '' }); \n            setPasswordStrength('');\n        }\n    };\n\n    return (\n        <div className=\"container\">\n            <Sidebar />\n            <div className=\"events-list\">\n                <h2>Upcoming Events</h2>\n                {loading && <p>Loading events...</p>} \n                {error && <p className=\"error-message\">{error}</p>} \n                {successMessage && <p className=\"success-message\">{successMessage}</p>} \n                <ul>\n                    {events.map((event) => (\n                        <li key={event.id}>\n                            <h3>{event.event_name}</h3>\n                            <p>Date: {new Date(event.event_date).toLocaleDateString()}</p>\n                            {console.log('Event:', event)} \n                            {event.imgurl && (\n                                <img \n                                    src={event.imgurl} \n                                    alt={event.event_name} \n                                    style={{ width: '100px' }} \n                                    onError={() => console.error(`Failed to load image from URL: ${event.imgurl}`)} \n                                />\n                            )}\n                            {event.vidurl && (\n                                <video width=\"100\" controls>\n                                    <source src={event.vidurl} type=\"video/mp4\" />\n                                    Your browser does not support the video tag.\n                                </video>\n                            )}\n                        </li>\n                    ))}\n                </ul>\n                <button onClick={toggleFormVisibility}>\n                    {isFormVisible ? 'Hide Event Form' : 'Create New Event'}\n                </button>\n                \n                {isFormVisible && (\n                    <div className=\"modal-overlay\">\n                        <div className=\"modal\">\n                            <h3>Create New Event</h3>\n                            <form onSubmit={handleSubmit}>\n                                <div>\n                                    <label>Event Name:</label>\n                                    <input\n                                        type=\"text\"\n                                        name=\"event_name\"\n                                        value={eventDetails.event_name}\n                                        onChange={handleChange}\n                                        required\n                                    />\n                                </div>\n                                <div>\n                                    <label>Event Date:</label>\n                                    <input\n                                        type=\"date\"\n                                        name=\"event_date\"\n                                        value={eventDetails.event_date}\n                                        onChange={handleChange}\n                                        required\n                                    />\n                                </div>\n                                <div>\n                                    <label>Password:</label>\n                                    <input\n                                        type=\"password\"\n                                        name=\"password\"\n                                        value={eventDetails.password}\n                                        onChange={handleChange}\n                                    />\n                                    \n                                    {eventDetails.password && (\n                                        <p>Password Strength: {passwordStrength}</p>\n                                    )}\n                                </div>\n                                <div>\n                                    <label>Image:</label>\n                                    <input\n                                        type=\"file\"\n                                        name=\"imgFile\"\n                                        accept=\"image/*\" \n                                        onChange={handleChange}\n                                    />\n                                    {eventDetails.imgFile && (\n                                        <img\n                                            src={URL.createObjectURL(eventDetails.imgFile)} \n                                            alt=\"Preview\"\n                                            style={{ width: '100px', marginTop: '10px' }}\n                                        />\n                                    )}\n                                </div>\n                                <div>\n                                    <label>Video:</label>\n                                    <input\n                                        type=\"file\"\n                                        name=\"vidFile\"\n                                        accept=\"video/*\" \n                                        onChange={handleChange}\n                                    />\n                                    {eventDetails.vidFile && (\n                                        <video\n                                            width=\"100\"\n                                            controls\n                                            style={{ marginTop: '10px' }}\n                                        >\n                                            <source\n                                                src={URL.createObjectURL(eventDetails.vidFile)} \n                                                type={eventDetails.vidFile.type}\n                                            />\n                                            Your browser does not support the video tag.\n                                        </video>\n                                    )}\n                                </div>\n                                <button type=\"submit\" disabled={loading}>{loading ? 'Creating...' : 'Create Event'}</button>\n                                <button type=\"button\" onClick={toggleFormVisibility}>Cancel</button>\n                            </form>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default EventManager;\n","import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom'; \nimport { FaTachometerAlt, FaFileAlt, FaHeart, FaPaw, FaCogs, FaCalendarAlt, FaUsers, FaSignOutAlt, FaMap } from 'react-icons/fa'; \n\nimport '../style/Sidebar.css';\nimport ConfirmationModal from './ConfirmationModal'; \nimport { useAuth } from '../context/AuthContext'; \n\nconst Sidebar = () => {\n  const { logout } = useAuth(); \n  const [isModalOpen, setModalOpen] = useState(false);\n  const navigate = useNavigate();\n\n  const handleLogoutClick = () => {\n    setModalOpen(true); \n  };\n\n  const confirmLogout = () => {\n    logout(); \n    navigate('/'); \n    alert(\"Successfully logged out!\"); \n  };\n\n  const cancelLogout = () => {\n    setModalOpen(false);\n  };\n\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar-header\">\n        <h2>Admin</h2>\n      </div>\n      <ul className=\"sidebar-list\">\n        <li>\n          <Link to=\"/dashboard\" className=\"sidebar-link\">\n            <FaTachometerAlt className=\"sidebar-icon\" /> Dashboard\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/reports\" className=\"sidebar-link\">\n            <FaFileAlt className=\"sidebar-icon\" /> Reports\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/adopt-animal\" className=\"sidebar-link\">\n            <FaHeart className=\"sidebar-icon\" /> Adoptions\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/animals\" className=\"sidebar-link\">\n            <FaPaw className=\"sidebar-icon\" /> Animals\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/events\" className=\"sidebar-link\">\n            <FaCalendarAlt className=\"sidebar-icon\" /> Events\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/rescuers\" className=\"sidebar-link\">\n            <FaUsers className=\"sidebar-icon\" /> Rescuers\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/maps\" className=\"sidebar-link\"> \n            <FaMap className=\"sidebar-icon\" /> Map\n          </Link>\n        </li>\n      </ul>\n      <div className=\"sidebar-footer\">\n        <button onClick={handleLogoutClick} className=\"sidebar-link logout-button\">\n          <FaSignOutAlt className=\"sidebar-icon\" /> Logout\n        </button>\n      </div>\n\n     \n      <ConfirmationModal\n        isOpen={isModalOpen}\n        message=\"Are you sure you want to log out?\"\n        onConfirm={confirmLogout}\n        onCancel={cancelLogout}\n      />\n    </div>\n  );\n};\n\nexport default Sidebar;\n"],"names":["_ref","isOpen","message","onConfirm","onCancel","title","confirmText","cancelText","_jsx","className","children","_jsxs","onClick","EventManager","events","setEvents","useState","isFormVisible","setFormVisible","eventDetails","setEventDetails","event_name","event_date","imgFile","vidFile","password","loading","setLoading","error","setError","successMessage","setSuccessMessage","passwordStrength","setPasswordStrength","useEffect","fetchEvents","async","response","fetch","ok","Error","status","data","json","console","log","handleChange","e","name","value","files","target","evaluatePasswordStrength","strength","length","match","toggleFormVisibility","Sidebar","map","event","Date","toLocaleDateString","imgurl","src","alt","style","width","onError","vidurl","controls","type","id","onSubmit","preventDefault","formData","FormData","append","method","body","errorText","text","onChange","required","accept","URL","createObjectURL","marginTop","disabled","logout","useAuth","isModalOpen","setModalOpen","navigate","useNavigate","Link","to","FaTachometerAlt","FaFileAlt","FaHeart","FaPaw","FaCalendarAlt","FaUsers","FaMap","handleLogoutClick","FaSignOutAlt","ConfirmationModal","confirmLogout","alert","cancelLogout"],"sourceRoot":""}